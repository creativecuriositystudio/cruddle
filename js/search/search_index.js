var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"/index.html":["2","action","actual","angular","api","applic","autodeletedescrib","autoformdescrib","autolistdescrib","autoreaddescrib","avail","base","basic","bead","below","benefit","between","buttonsto","case,then","certainfunction","chang","class.in","code","code,cruddle'","column","come","compon","components/us","componentsfor","concept","containpagin","creat","crud(l","cruddl","cruddlemodul","cruddleusag","crudl","custom","data","default","delet","deletedescrib","deletest","describ","descript","detail","develop","differ","directori","doc","docstest","document","documentat","down","each","element","encourag","exampl","execut","extend","extrem","field","form","formdescrib","formstat","function","gener","generallyact","generategener","glue","huge","ignor","index","inform","informationinto","instal","interact","interfac","introduct","keep","librari","licens","license.md","list","listdescrib","liststat","liter","look","match","minim","mit","model","models.th","modelsaf","more","need","note","npm","onlin","order","perform","pleas","popupon","producesscreen","project","provid","providerinclud","read","readdescrib","readm","readstat","refresh","relat","render","respect","result","run","same","save","screen","screenshould","section","see","sens","separ","show","similar","singl","specificvers","state","stillne","suit","take","templat","test","testlicens","that'","thought","three","track","turn","typedoci","types.thes","ui","under","updat","us","usag","user","usinghtml","validationsautomat","visual","willstil","work","write"],"/overview.html":["1","10","11","4","browser","class","inject","interfac","match","modul","out","overview","reset","result","support","svg","zoom"],"/modules.html":["brows","browser","cruddlemodul","match","modul","result","support","svg"],"/modules/CruddleModule.html":["angular/common","angular/cor","applic","applicationmodul","autodeletedescrib","autoformdescrib","autolistdescrib","autoreaddescrib","browser","class","commonmodul","compon","components.thi","contain","cruddl","cruddlemodul","delet","descript","export","file","form","import","info","list","match","modul","ngmodul","out","provid","read","relev","reset","result","sourc","src/module.t","support","svg","zoom"],"/injectables/AutoDeleteDescriber.html":["_instance_","abstract","angular/cor","async","autodeletedescrib","automat","base","behav","behaviour","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","class","construct","constructor(model","current","default","defaultdeletedescrib","defaultdeletedescriber(model","defaultdeleteopt","del","del(thi","delet","delete(inst","delete(st","deletedescrib","deletest","describ","describe(model","descript","drive","export","extend","extra","file","form","function","gener","implement","import","info","initi","inject","instanc","interfac","match","method","model","modelconstructor","modelsaf","new","noth","option","param","paramet","promis","provid","resolv","result","return","screen","screendescrib","screenstat","sourc","src/delete.t","state","super(model","super.st","t","this.cancel.bind(thi","this.delete.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.delete(st","typeof","us","way","wrap"],"/injectables/AutoFormDescriber.html":["_instanc","abstract","angular/cor","async","autoformdescrib","automat","backend","base","behav","behaviour","button","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","case","child","class","construct","constructor(model","create/edit","current","data","default","defaultformdescrib","defaultformdescriber(model","defaultformopt","describ","describe(model","descript","drive","edit","editing/cr","error","export","extend","extra","file","form","formdescrib","formstat","function","gener","implement","import","info","initi","inject","instanc","interfac","librari","match","method","model","modelconstructor","modelerror","modelsaf","need","new","noth","nothing.if","option","overrid","overridethi","param","paramet","promis","provid","providedto","requir","requiredbi","resolv","result","return","save","save(inst","save(st","save(thi","screen","screendescrib","screenstat","share","sourc","src/form.t","state","such","super(model","super.st","t","this.cancel.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.save(st","this.save.bind(thi","typeof","updat","us","user","way","whatev","wrap"],"/injectables/AutoListDescriber.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","method","mode","mode.id","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","paramet","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/injectables/AutoReadDescriber.html":["abstract","angular/cor","automat","autoreaddescrib","base","behav","behaviour","class","custom","default","defaultreaddescrib","defaultreaddescriber(model","describ","describe(model","descript","empti","export","extend","file","gener","import","info","initi","inject","interfac","line:no","match","method","model","modelconstructor","modelsaf","new","next","read","readdescrib","readstat","result","return","screen","screendescrib","screenstat","sourc","src/read.t","state","super.st","tslint:dis","us","view","way","without"],"/classes/CruddleModuleInjector.html":["___autodeletedescriber_5","___autoformdescriber_3","___autolistdescriber_6","___autoreaddescriber_4","___nglocalization_2","__autodeletedescriber_5:import5.autodeletedescrib","__autoformdescriber_3:import3.autoformdescrib","__autolistdescriber_6:import6.autolistdescrib","__autoreaddescriber_4:import4.autoreaddescrib","__nglocalization_2:import2.nglocaleloc","_autodeletedescriber_5","_autodeletedescriber_5():import5.autodeletedescrib","_autoformdescriber_3","_autoformdescriber_3():import3.autoformdescrib","_autolistdescriber_6","_autolistdescriber_6():import6.autolistdescrib","_autoreaddescriber_4","_autoreaddescriber_4():import4.autoreaddescrib","_commonmodule_0","_commonmodule_0:import2.commonmodul","_cruddlemodule_1","_cruddlemodule_1:import1.cruddlemodul","_nglocalization_2","_nglocalization_2():import2.nglocaleloc","angular/common","angular/cor","autodeletedescrib","autoformdescrib","autolistdescrib","autoreaddescrib","class","commonmodul","const","constructor","constructor(par","constructor(parent:import0.injector","createintern","createinternal():import1.cruddlemodul","cruddlemodul","cruddlemoduleinjector","cruddlemodulengfactory:import0.ngmodulefactori","delet","destroyintern","destroyinternal():void","export","extend","file","form","getintern","getinternal(token","getinternal(token:any,notfoundresult:any):ani","import","import0","import0.ngmodulefactory(cruddlemoduleinjector,import1.cruddlemodul","import0.Éµngmoduleinjector","import1","import1.cruddlemodul","import2","import2.commonmodul","import2.ngloc","import2.nglocalelocalization(this.parent.get(import0.locale_id","import3","import3.autoformdescrib","import4","import4.autoreaddescrib","import5","import5.autodeletedescrib","import6","import6.autolistdescrib","info","injector","list","match","method","modul","new","nglocaleloc","notfoundresult","null","properti","read","result","return","sourc","sourcemappingurl=data:application/json;base64,eyjmawxlijoil2hvbwuvemfjay9kzxyvy3j1zgrszs9zcmmvbw9kdwxllm5nzmfjdg9yes50cyisinzlcnnpb24iojmsinnvdxjjzvjvb3qioiiilcjzb3vyy2vzijpbim5noi8vl2hvbwuvemfjay9kzxyvy3j1zgrszs9zcmmvbw9kdwxllnrzil0sinnvdxjjzxndb250zw50ijpbiiaixswibwfwcgluz3mioijbqufbozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7oyj9","src/module.ngfactory.t","super(par","this.__autodeletedescriber_5","this.__autoformdescriber_3","this.__autolistdescriber_6","this.__autoreaddescriber_4","this.__nglocalization_2","this._autodeletedescriber_5","this._autoformdescriber_3","this._autolistdescriber_6","this._autoreaddescriber_4","this._commonmodule_0","this._cruddlemodule_1","this._nglocalization_2","token","void"],"/classes/DefaultDeleteDescriber.html":["_instance_","abstract","angular/cor","async","autodeletedescrib","automat","base","behav","behaviour","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","class","construct","constructor(model","current","default","defaultdeletedescrib","defaultdeletedescriber(model","defaultdeleteopt","del","del(thi","delet","delete(inst","delete(st","deletedescrib","deletest","describ","describe(model","descript","drive","export","extend","extra","file","form","function","gener","implement","import","info","initi","inject","instanc","interfac","match","method","model","modelconstructor","modelsaf","new","noth","option","param","paramet","promis","provid","resolv","result","return","screen","screendescrib","screenstat","sourc","src/delete.t","state","super(model","super.st","t","this.cancel.bind(thi","this.delete.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.delete(st","typeof","us","way","wrap"],"/classes/DefaultFormDescriber.html":["_instanc","abstract","angular/cor","async","autoformdescrib","automat","backend","base","behav","behaviour","button","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","case","child","class","construct","constructor(model","create/edit","current","data","default","defaultformdescrib","defaultformdescriber(model","defaultformopt","describ","describe(model","descript","drive","edit","editing/cr","error","export","extend","extra","file","form","formdescrib","formstat","function","gener","implement","import","info","initi","inject","instanc","interfac","librari","match","method","model","modelconstructor","modelerror","modelsaf","need","new","noth","nothing.if","option","overrid","overridethi","param","paramet","promis","provid","providedto","requir","requiredbi","resolv","result","return","save","save(inst","save(st","save(thi","screen","screendescrib","screenstat","share","sourc","src/form.t","state","such","super(model","super.st","t","this.cancel.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.save(st","this.save.bind(thi","typeof","updat","us","user","way","whatev","wrap"],"/classes/DefaultListDescriber.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","method","mode","mode.id","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","paramet","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/classes/DefaultReadDescriber.html":["abstract","angular/cor","automat","autoreaddescrib","base","behav","behaviour","class","custom","default","defaultreaddescrib","defaultreaddescriber(model","describ","describe(model","descript","empti","export","extend","file","gener","import","info","initi","inject","interfac","line:no","match","method","model","modelconstructor","modelsaf","new","next","read","readdescrib","readstat","result","return","screen","screendescrib","screenstat","sourc","src/read.t","state","super.st","tslint:dis","us","view","way","without"],"/classes/DeleteDescriber.html":["_instance_","abstract","angular/cor","async","autodeletedescrib","automat","base","behav","behaviour","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","class","construct","constructor(model","current","default","defaultdeletedescrib","defaultdeletedescriber(model","defaultdeleteopt","del","del(thi","delet","delete(inst","delete(st","deletedescrib","deletest","describ","describe(model","descript","drive","export","extend","extra","file","form","function","gener","implement","import","info","initi","inject","instanc","interfac","match","method","model","modelconstructor","modelsaf","new","noth","option","param","paramet","promis","provid","resolv","result","return","screen","screendescrib","screenstat","sourc","src/delete.t","state","super(model","super.st","t","this.cancel.bind(thi","this.delete.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.delete(st","typeof","us","way","wrap"],"/classes/FormDescriber.html":["_instanc","abstract","angular/cor","async","autoformdescrib","automat","backend","base","behav","behaviour","button","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","case","child","class","construct","constructor(model","create/edit","current","data","default","defaultformdescrib","defaultformdescriber(model","defaultformopt","describ","describe(model","descript","drive","edit","editing/cr","error","export","extend","extra","file","form","formdescrib","formstat","function","gener","implement","import","info","initi","inject","instanc","interfac","librari","match","method","model","modelconstructor","modelerror","modelsaf","need","new","noth","nothing.if","option","overrid","overridethi","param","paramet","promis","provid","providedto","requir","requiredbi","resolv","result","return","save","save(inst","save(st","save(thi","screen","screendescrib","screenstat","share","sourc","src/form.t","state","such","super(model","super.st","t","this.cancel.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.save(st","this.save.bind(thi","typeof","updat","us","user","way","whatev","wrap"],"/classes/ListDescriber.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","method","mode","mode.id","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","paramet","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/classes/ReadDescriber.html":["abstract","angular/cor","automat","autoreaddescrib","base","behav","behaviour","class","custom","default","defaultreaddescrib","defaultreaddescriber(model","describ","describe(model","descript","empti","export","extend","file","gener","import","info","initi","inject","interfac","line:no","match","method","model","modelconstructor","modelsaf","new","next","read","readdescrib","readstat","result","return","screen","screendescrib","screenstat","sourc","src/read.t","state","super.st","tslint:dis","us","view","way","without"],"/classes/ScreenDescriber.html":["0","1","_","_.clone","_.clone(act","_.isarray(attroptions.valu","a.ord","abstract","act","action","actiondescript","actionst","actual","actuallyspecifi","add","addalert(alert","alert","alert'","alert.id","alertst","allow","allowsfor","assoc","assoc.readonli","assoc.typ","associ","associationdescript","associationtyp","assocopt","assocs[key","attr","attr.readonli","attr.typ","attr.type.opt","attr.type.typ","attribut","attributedescript","attributes/associ","attributetyp","attropt","attroptions.valu","attrs[key","automat","b","b.order","base","be","behaviorsubject","behaviorsubject(refreshprops(vis","beign","boolean","button","camel","case","check","class","code","come","concat([alert","concat(_.values(this.getassoci","construct","constructor","constructor(model","contextu","contextualact","contextualactiondescript","contextualactionst","creat","data","default","delet","depend","desc.path","desc.vis","describ","describeri","descript","descriptionsof","directli","display","do(thi","don't","e.g","emit","empti","enum","enumattributetypeopt","enumattributetypeoptions).values.map((v","exist","export","extend","extra","file","filter","filter((item","filter(desc","first","form","function","gener","getact","getassoci","getassociations(this.model","getattribut","getattributes(this.model","getcontextualact","getmodelopt","getmodeloptions(this.model).nam","getpropertyopt","getpropertyoptions(this.model","getscreen","html","id","implement","import","inflect","info","instanc","instance/row","instanti","interact","interfac","intern","internalattributetyp","internalattributetype.enum","isperform","item.id","itself","key","label","line:no","list","lodash","look","manual","map","map(desc","mappedassoc","mappedassocs[key","mappedattr","mappedattrs[key","mark","match","messag","metadata","method","misc","miscellan","mode","model","modelconstructor","modelsaf","modelsafemodel","name","neg","new","next","number","object.keys(assoc","object.keys(attr","observ","on","onc","option","order","overrid","overridden","overriddento","page","param","path","perform","plain","plural","pluralize(_.camelcase(nam","popul","possibl","pre","promis","prop","properti","propertydescript","propertyst","propertyvaluedescript","propopt","propssubject","propssubject.asobserv","protect","provid","push","re","read","readonli","refreshprop","rel","relat","relev","remov","removealert(alert","resolv","result","return","rxj","same","san","screen","screen.plur","screen.singular","screen.vis","screendescrib","screendescript","screenstat","select","set","setvisible(path","share","singular","singularize(_.camelcase(nam","sort","sort((a","sortabl","sourc","specif","specifi","src/base.t","start","state","state.do","state.do.bind(st","static/hard","string","subject","t","take","text","this.alert","this.alerts.filter((item","this.getactions().map((act","this.getcontextualactions().map((act","this.getscreen","this.model","this.propssubject.next(refreshprops(path","this.vis","tslint:dis","type","typeof","uniqu","us","v","valu","values(this.getattribut","variant","visibl","visible.indexof(desc.path","void","want","wantto","whether"],"/interfaces/DefaultDeleteOptions.html":["_instance_","abstract","angular/cor","async","autodeletedescrib","automat","base","behav","behaviour","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","class","construct","constructor(model","current","default","defaultdeletedescrib","defaultdeletedescriber(model","defaultdeleteopt","del","del(thi","delet","delete(inst","delete(st","deletedescrib","deletest","describ","describe(model","descript","drive","export","extend","extra","file","form","function","gener","implement","import","info","initi","inject","instanc","interfac","match","method","model","modelconstructor","modelsaf","new","noth","option","param","promis","provid","resolv","result","return","screen","screendescrib","screenstat","sourc","src/delete.t","state","super(model","super.st","t","this.cancel.bind(thi","this.delete.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.delete(st","typeof","us","way","wrap"],"/interfaces/DefaultFormOptions.html":["_instanc","abstract","angular/cor","async","autoformdescrib","automat","backend","base","behav","behaviour","button","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","case","child","class","construct","constructor(model","create/edit","current","data","default","defaultformdescrib","defaultformdescriber(model","defaultformopt","describ","describe(model","descript","drive","edit","editing/cr","error","export","extend","extra","file","form","formdescrib","formstat","function","gener","implement","import","info","initi","inject","instanc","interfac","librari","match","method","model","modelconstructor","modelerror","modelsaf","need","new","noth","option","overrid","param","promis","provid","requir","resolv","result","return","save","save(inst","save(st","save(thi","screen","screendescrib","screenstat","share","sourc","src/form.t","state","such","super(model","super.st","t","this.cancel.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.save(st","this.save.bind(thi","typeof","updat","us","user","way","whatev","wrap"],"/interfaces/DefaultListOptions.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","method","mode","mode.id","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/interfaces/DeleteState.html":["_instance_","abstract","angular/cor","async","autodeletedescrib","automat","base","behav","behaviour","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","class","construct","constructor(model","current","default","defaultdeletedescrib","defaultdeletedescriber(model","defaultdeleteopt","del","del(thi","delet","delete(inst","delete(st","deletedescrib","deletest","describ","describe(model","descript","drive","export","extend","extra","file","form","function","gener","implement","import","info","initi","inject","instanc","interfac","match","method","model","modelconstructor","modelsaf","new","noth","option","param","paramet","promis","provid","resolv","result","return","screen","screendescrib","screenstat","sourc","src/delete.t","state","super(model","super.st","t","this.cancel.bind(thi","this.delete.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.delete(st","typeof","us","way","wrap"],"/interfaces/FilterState.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","andit'","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","by.thi","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","figureout","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","mode","mode.id","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","type","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/interfaces/FormState.html":["_instanc","abstract","angular/cor","async","autoformdescrib","automat","backend","base","behav","behaviour","button","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","case","cases(such","child","class","construct","constructor(model","create/edit","current","data","default","defaultformdescrib","defaultformdescriber(model","defaultformopt","describ","describe(model","descript","drive","edit","editing/cr","error","export","extend","extra","file","form","formdescrib","formstat","function","gener","implement","import","info","initi","inject","instanc","interfac","librari","match","method","model","modelconstructor","modelerror","modelsaf","need","new","noth","option","overrid","param","paramet","promis","properti","provid","providedbi","requir","resolv","result","return","save","save(inst","save(st","save(thi","screen","screendescrib","screenstat","share","sourc","src/form.t","state","such","super(model","super.st","t","thefunct","this.cancel.bind(thi","this.opt","this.options.cancel","this.options.cancel(st","this.options.save(st","this.save.bind(thi","type","typeof","updat","us","user","way","whatev","wrap"],"/interfaces/ListMode.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","mode","mode.id","mode.thi","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","type","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/interfaces/ListState.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilt","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfilt","clearfiltering(refresh","clearsort","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpag","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpag","lastpage(refresh","latest","librari","list","list'","list.thi","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","method","mode","mode.id","modeid","model","modelconstructor","modelsaf","move","navig","new","next","nextpag","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","page.thi","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","paramet","partial","path","per","previou","previouspag","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilt","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpag","setitemsperpage(itemsperpag","setmod","setmode(mod","setpag","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","state.thi","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","type","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/interfaces/PagingState.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","mode","mode.id","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","type","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/interfaces/ReadState.html":["abstract","angular/cor","automat","autoreaddescrib","base","behav","behaviour","class","custom","default","defaultreaddescrib","defaultreaddescriber(model","describ","describe(model","descript","empti","export","extend","file","gener","import","info","initi","inject","interfac","line:no","match","model","modelconstructor","modelsaf","new","next","read","readdescrib","readstat","result","return","screen","screendescrib","screenstat","sourc","src/read.t","state","super.st","tslint:dis","us","view","way","without"],"/interfaces/SortState.html":["1","_","_.filter(this.sort","_.without(this.filt","abstract","actual","add","addfilter(prop","addit","angular/cor","arbitrari","around","asc","ascend","ask","async","autolistdescrib","automat","await","base","be","behav","behaviour","blanketli","boolean","cast","class","clear","clearfiltering(refresh","clearsorting(refresh","const","construct","constructor(model","contain","correspond","current","data","default","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","definit","desc","descend","describ","describe(model","descript","display","drive","emit","enabl","enum","equal","event","eventemitt","export","extend","figur","file","filter","filterst","first","firstpage(refresh","fixm","function","gener","haspag","have","here","i.","id","implement","import","index","info","inform","initi","inject","interfac","it'","item","itemsperpag","label","last","lastpage(refresh","latest","librari","list","list'","listdescrib","listmod","liststat","lodash","match","math.max(itemsperpag","math.max(math.min(pag","mode","mode.id","model","modelconstructor","modelsaf","move","navig","new","next","nextpage(refresh","note","noth","number","numitem","numpag","object","oper","option","order","out","page","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","partial","path","per","previou","previouspage(refresh","promis","prop","prop.path","properti","propertyst","provid","refresh","refresh(st","refresh(thi","remov","removefilter(filt","requir","resolv","result","return","screen","screendescrib","screenstat","set","setitemsperpage(itemsperpag","setmode(mod","setpage(pag","shallow","sort","sort(prop","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","specif","src/list.t","start","state","stop","store","string","super(model","super.st","temporarili","this.filt","this.filters.push","this.haspag","this.mod","this.opt","this.options.refresh(st","this.pag","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","true","type","typeof","unless","up","us","user","valu","view","void","way","whether","without","zero"],"/miscellaneous.html":["asc","ascend","cruddle:propopt","cruddlemodulengfactori","default","desc","descend","key","match","meta","miscellan","model'","model_prop_options_meta_key","option","properti","result","sort","valu","variabl"],"/coverage.html":["0","0/0","0/15","1/1","100","19/19","2/2","2/3","3/3","4/4","66","7/7","90","autodeletedescrib","autoformdescrib","autolistdescrib","autoreaddescrib","class","coverag","cruddlemoduleinjector","defaultdeletedescrib","defaultdeleteopt","defaultformdescrib","defaultformopt","defaultlistdescrib","defaultlistopt","defaultreaddescrib","deletedescrib","deletest","document","file","filterst","formdescrib","formstat","identifi","inject","interfac","listdescrib","listmod","liststat","match","pagingst","project","readdescrib","readstat","result","screendescrib","sortstat","src/base.t","src/delete.t","src/form.t","src/list.t","src/module.ngfactory.t","src/read.t","statement","type"]},"length":31},"tokenStore":{"root":{"0":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/coverage.html":{"ref":"/coverage.html","tf":0.014598540145985401}},"/":{"0":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"1":{"5":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"docs":{}},"docs":{}}},"1":{"0":{"0":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.16058394160583941}}},"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05}}},"1":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05}}},"9":{"docs":{},"/":{"1":{"9":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"docs":{}},"docs":{}}},"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.007909604519774011},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.007909604519774011},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.007909604519774011},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.008073817762399077},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.007856341189674524},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.007936507936507936},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.007401315789473684},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.008968609865470852},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.008027522935779817}},"/":{"1":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.029197080291970802}}},"docs":{}}},"2":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}},"/":{"2":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.051094890510948905}}},"3":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"docs":{}}},"3":{"docs":{},"/":{"3":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.058394160583941604}}},"docs":{}}},"4":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05}},"/":{"4":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"docs":{}}},"6":{"6":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"docs":{}},"7":{"docs":{},"/":{"7":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"docs":{}}},"9":{"0":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"docs":{}},"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.02965599051008304}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}},"r":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"'":{"docs":{"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789}}}}}}},"p":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.04477611940298507},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":5.005208333333333},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.04477611940298507},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":5.004282655246253},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.04477611940298507},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":5.00225988700565},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.04477611940298507},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":5.018867924528302},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.010706638115631691},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.010706638115631691},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.010706638115631691},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.007556675062972292},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.015625},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.01284796573875803},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.015625},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.01284796573875803},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.015625},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.01284796573875803},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.017191977077363897},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.015113350125944584},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.016260162601626018},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.013953488372093023},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}}},"c":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.07692307692307693}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}}}}},"k":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.02491103202846975}},"'":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}},"s":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.009489916963226572}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.009489916963226572}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}},"b":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0057670126874279125},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.008978675645342313},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.006726457399103139},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.006880733944954129}},"a":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.006423982869379015},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.006423982869379015},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.006423982869379015},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"/modules.html":{"ref":"/modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/modules.html":{"ref":"/modules.html","tf":0.1},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.02937853107344633},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.02937853107344633},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.02937853107344633},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.029988465974625143},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.029180695847362513},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.02947845804988662},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.032072368421052634},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.02914798206278027},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.02981651376146789}}}}}}}},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0390625},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.034261241970021415},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0390625},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.034261241970021415},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0390625},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.034261241970021415},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.03724928366762178},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.03526448362720403},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.04065040650406504},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.03953488372093023}},"(":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115}}}}}},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}},"?":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.008565310492505354},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.008565310492505354},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.008565310492505354},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.014989293361884369},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.02830188679245283},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":5.010869565217392},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":5.010416666666667},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":5.017130620985011},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":5.0067796610169495},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":5.037735849056604},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":5.010416666666667},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":5.017130620985011},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":5.0067796610169495},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":5.037735849056604},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":5.00711743772242},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.008595988538681949},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.012594458438287154},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.011627906976744186},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.030612244897959183},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525},"/coverage.html":{"ref":"/coverage.html","tf":0.072992700729927}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004934210526315789},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},",":{"docs":{},"c":{"docs":{},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"m":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.00830367734282325}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"[":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}},"_":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.010706638115631691},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.010706638115631691},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.010706638115631691},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.007556675062972292},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"o":{"docs":{},"r":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"0":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":10.007299270072993}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"d":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/modules.html":{"ref":"/modules.html","tf":0.1},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":5.029850746268656},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":5.010869565217392},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"0":{"docs":{},".":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"i":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}}}}}}}}}}}},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.010416666666666666},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.008565310492505354},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.010416666666666666},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.008565310492505354},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.010416666666666666},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.008565310492505354},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004934210526315789},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.005605381165919282},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.013559322033898305},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.013559322033898305},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.013559322033898305},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.01122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.01473922902494331},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.009868421052631578},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.011210762331838564},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.011467889908256881}}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.026041666666666668},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.02569593147751606},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.023728813559322035},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.026041666666666668},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.02569593147751606},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.023728813559322035},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.026041666666666668},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.02569593147751606},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.023728813559322035},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.009489916963226572},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.03724928366762178},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.03526448362720403},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.025374855824682813},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.02710027100271003},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.02356902356902357},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.02558139534883721},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.023809523809523808},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.027960526315789474},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.023542600896860985},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.02408256880733945},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":5.0078125},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.010416666666666666},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.010416666666666666},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.010416666666666666},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":5.01432664756447},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.01084010840108401},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":5.006423982869379},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.008565310492505354},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.008565310492505354},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.008565310492505354},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":5.012594458438287},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.009302325581395349},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":5.003389830508475},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":5.005767012687428},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":5.028301886792453},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"l":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027}},"e":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02476780185758514},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.1015625},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.1015625},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.1015625},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.08882521489971347},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0975609756097561}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":5.0078125},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"s":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.028645833333333332},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.028645833333333332},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.028645833333333332},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.02865329512893983},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":5.024390243902439},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009}}}}}},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.010416666666666666},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.010416666666666666},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.010416666666666666},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.011461318051575931},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027}}}}}}},"s":{"docs":{},"c":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.07692307692307693}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02786377708978328},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.041666666666666664},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.034261241970021415},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.015819209039548022},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.05660377358490566},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.041666666666666664},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.034261241970021415},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.015819209039548022},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.05660377358490566},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.041666666666666664},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.034261241970021415},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.015819209039548022},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.05660377358490566},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.018979833926453145},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.04871060171919771},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.042821158690176324},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.014994232987312572},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.04336043360433604},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.013468013468013467},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.037209302325581395},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.013605442176870748},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.01069078947368421},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.013452914798206279},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.05102040816326531},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.013761467889908258}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}},"r":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"p":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0166073546856465},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"l":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}}}}}},"o":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}},"w":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}},"u":{"docs":{},"m":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.006423982869379015},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.02830188679245283},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0078125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.006423982869379015},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.02830188679245283},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0078125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.006423982869379015},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.02830188679245283},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.00830367734282325},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.008595988538681949},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.007556675062972292},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.030612244897959183},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"a":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.008565310492505354},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0078125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.008565310492505354},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0078125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.008565310492505354},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.013020833333333334},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.010706638115631691},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.013559322033898305},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.03773584905660377},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.013020833333333334},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.010706638115631691},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.013559322033898305},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.03773584905660377},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.013020833333333334},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.010706638115631691},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.013559322033898305},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.03773584905660377},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.017793594306049824},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.014326647564469915},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.012594458438287154},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.01384083044982699},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.013550135501355014},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.013468013468013467},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.011627906976744186},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.013605442176870748},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.009868421052631578},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.013452914798206279},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.04081632653061224},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.013761467889908258}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.009302325581395349}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.009302325581395349}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}}}}}}}}},".":{"docs":{},"g":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"l":{"docs":{},"e":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.02711864406779661},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.02711864406779661},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.02711864406779661},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.02768166089965398},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.03254769921436588},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.027210884353741496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.03042763157894737},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.026905829596412557},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.027522935779816515}},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0057670126874279125},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":5.006734006734007},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.006578947368421052},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.005605381165919282},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.005733944954128441},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}}},"x":{"docs":{},"m":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.05139186295503212},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.05139186295503212},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.05139186295503212},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.04534005037783375},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.04186046511627907}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":5.006423982869379},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.023554603854389723},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.023554603854389723},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.023554603854389723},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.02518891687657431},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":5.02093023255814},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.034055727554179564},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0234375},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.023554603854389723},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0234375},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.023554603854389723},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0234375},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.023554603854389723},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.03151862464183381},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.030226700251889168},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.006920415224913495},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.02981029810298103},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.005611672278338945},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.02558139534883721},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004934210526315789},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.005605381165919282},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.005733944954128441}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.03715170278637771},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.010706638115631691},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0078125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.010706638115631691},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0078125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.010706638115631691},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.008595988538681949},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.010075566750629723},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.009302325581395349},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"h":{"docs":{},"u":{"docs":{},"g":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}},"v":{"docs":{},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/index.html":{"ref":"/index.html","tf":5},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}},"f":{"docs":{},"o":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"r":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.00903954802259887},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.00903954802259887},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.00903954802259887},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00922722029988466},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.008978675645342313},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.009070294784580499},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.012335526315789474},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.008968609865470852},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.009174311926605505}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}},"n":{"docs":{},"c":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0859375},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.06852248394004283},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0859375},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.06852248394004283},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0859375},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.06852248394004283},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.07736389684813753},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0654911838790932},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.08672086720867209},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.07441860465116279}},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}},"t":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/overview.html":{"ref":"/overview.html","tf":0.05},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.006779661016949152},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.006779661016949152},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.006779661016949152},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.017793594306049824},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":5.008595988538682},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":5.007556675062972},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":5.008073817762399},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":5.008130081300813},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":5.007856341189674},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":5.006976744186047},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":5.007936507936508},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":5.005756578947368},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":5.007847533632287},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":5.030612244897959},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":5.00802752293578},"/coverage.html":{"ref":"/coverage.html","tf":0.08029197080291971}}}}},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":5.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":5.006423982869379},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":5.003389830508475},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":5.028301886792453},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/coverage.html":{"ref":"/coverage.html","tf":0.029197080291970802}},"o":{"docs":{},"r":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.006423982869379015},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.02830188679245283},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0078125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.006423982869379015},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.02830188679245283},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0078125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.006423982869379015},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.02830188679245283},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"0":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},".":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"Éµ":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}}}}}},"2":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"0":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}},"4":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}},"5":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}},"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.13432835820895522},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.006423982869379015},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.02830188679245283},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.03804347826086957},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0078125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.006423982869379015},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.02830188679245283},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0078125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.006423982869379015},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.02830188679245283},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.008595988538681949},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.007556675062972292},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.030612244897959183},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.008595988538681949},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.007556675062972292},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}},".":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.007936507936507936},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"t":{"docs":{},"'":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"e":{"docs":{},"m":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0057670126874279125},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.005611672278338945},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.005756578947368421},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.007847533632286996},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.005733944954128441}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"y":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.009489916963226572},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.018575851393188854},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.06666666666666667},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.06666666666666667},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.06666666666666667},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.06343713956170703},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.06060606060606061},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.06235827664399093},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.06414473684210527},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.05941704035874439},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.06192660550458716}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":5.003389830508475},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.00903954802259887},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.00903954802259887},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.00903954802259887},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.008073817762399077},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.006734006734006734},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.006802721088435374},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":5.005756578947368},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.006726457399103139},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.006880733944954129},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}},"'":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":5.00453514739229},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"n":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.00830367734282325},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/overview.html":{"ref":"/overview.html","tf":0.1},"/modules.html":{"ref":"/modules.html","tf":0.2},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.07692307692307693},"/coverage.html":{"ref":"/coverage.html","tf":0.014598540145985401}}}},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}},"s":{"docs":{},"c":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":10.038461538461538}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.012429378531073447},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.012429378531073447},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.012429378531073447},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.012687427912341407},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.012345679012345678},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.015873015873015872},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.013980263157894737},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.01233183856502242},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.01261467889908257}},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.030959752321981424},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.03125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.029978586723768737},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.006779661016949152},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.03773584905660377},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.03125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.029978586723768737},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.006779661016949152},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.03773584905660377},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.03125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.029978586723768737},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.006779661016949152},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.03773584905660377},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.02965599051008304},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.02865329512893983},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.02518891687657431},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.006920415224913495},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.032520325203252036},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.006734006734006734},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.023255813953488372},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.006802721088435374},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004934210526315789},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.006726457399103139},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.04081632653061224},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.006880733944954129}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"a":{"docs":{},"f":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0078125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.006423982869379015},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0078125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.006423982869379015},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0078125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.006423982869379015},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.008595988538681949},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.007556675062972292},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.008130081300813009},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.009302325581395349}}}}}}},"'":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624}}}}}},"i":{"docs":{},"d":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}}}}},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/modules.html":{"ref":"/modules.html","tf":10.1},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":5.059701492537314},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}},"r":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"v":{"docs":{},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.01122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.011337868480725623},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.012335526315789474},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.011210762331838564},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.011467889908256881}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}}}}},"a":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}}}}}}}},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}},"w":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.043478260869565216},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}},"x":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}},"g":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"h":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.006779661016949152},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.006779661016949152},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.006779661016949152},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.006920415224913495},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.006734006734006734},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.006802721088435374},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.009868421052631578},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.006726457399103139},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.006880733944954129}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"f":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427}}}},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}},"m":{"docs":{},"e":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.015819209039548022},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.015819209039548022},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.015819209039548022},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.016147635524798153},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.015712682379349047},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.015873015873015872},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.015625},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.026905829596412557},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.016055045871559634}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}},"l":{"docs":{},"l":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.02717391304347826}}}}}},"o":{"docs":{},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"c":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.015479876160990712},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.013559322033898305},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.013559322033898305},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.013559322033898305},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.01384083044982699},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.013468013468013467},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.013605442176870748},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.013157894736842105},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.013452914798206279},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.017201834862385322}}}}}},"u":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"/overview.html":{"ref":"/overview.html","tf":10.05}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"t":{"docs":{},"o":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.06510416666666667},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.06423982869379015},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.06510416666666667},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.06423982869379015},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.06510416666666667},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.06423982869379015},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.06876790830945559},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.06801007556675064},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.012687427912341407},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.06775067750677506},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.01122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.06744186046511629},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.011337868480725623},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.011210762331838564},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.011467889908256881},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}}}}},"e":{"docs":{},"r":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.008978675645342313},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.00830367734282325}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.018575851393188854},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0234375},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.032119914346895075},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.013559322033898305},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0234375},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.032119914346895075},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.013559322033898305},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0234375},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.032119914346895075},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.013559322033898305},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.02865329512893983},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.03526448362720403},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.014994232987312572},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.02981029810298103},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.013468013468013467},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.03255813953488372},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.013605442176870748},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.01644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.013452914798206279},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.013761467889908258}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677}}}},"b":{"docs":{},"i":{"docs":{"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.041666666666666664},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.029978586723768737},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.00903954802259887},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.041666666666666664},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.029978586723768737},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.00903954802259887},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.041666666666666664},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.029978586723768737},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.00903954802259887},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.04011461318051576},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0327455919395466},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.008073817762399077},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.04336043360433604},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.007856341189674524},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.03488372093023256},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.007936507936507936},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.006578947368421052},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.007847533632286996},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.008027522935779817}}}}},"p":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.011299435028248588},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.028469750889679714},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.014590347923681257},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.012471655328798186},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.012335526315789474},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.01233183856502242},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.014908256880733946},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0057670126874279125},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.005611672278338945},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.005756578947368421},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.005605381165919282},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.005733944954128441}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}},"e":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.026041666666666668},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.023554603854389723},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.02598870056497175},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.026041666666666668},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.023554603854389723},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.02598870056497175},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.026041666666666668},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.023554603854389723},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.02598870056497175},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.009489916963226572},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.02865329512893983},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.027707808564231738},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0265282583621684},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.02710027100271003},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.025813692480359147},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.02558139534883721},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.026077097505668934},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.018914473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0257847533632287},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.026376146788990827}},"e":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.009868421052631578}}}}}},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}},"g":{"docs":{},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.03728813559322034},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.03728813559322034},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.03728813559322034},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.03806228373702422},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.037037037037037035},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.03741496598639456},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.03700657894736842},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.042600896860986545},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.03784403669724771}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004934210526315789}}}}}}},"i":{"docs":{},"n":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0057670126874279125},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.005611672278338945},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.006578947368421052},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.006726457399103139},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.005733944954128441}},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":5.003363228699552},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}},"t":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.011862396204033215},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0057670126874279125},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.008978675645342313},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.005605381165919282},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.008027522935779817}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"r":{"docs":{},"e":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"a":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.08490566037735849},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.08490566037735849},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.08490566037735849},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.08163265306122448}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":5.028301886792453},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":5}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.02830188679245283},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.02830188679245283},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.02830188679245283},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":5.030612244897959},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.07457627118644068},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.07457627118644068},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.07457627118644068},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.07612456747404844},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.0718294051627385},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.07256235827664399},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.08470394736842106},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.07174887892376682},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.07339449541284404}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}},"e":{"docs":{},"v":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285},"/overview.html":{"ref":"/overview.html","tf":0.1},"/modules.html":{"ref":"/modules.html","tf":0.2},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.07692307692307693},"/coverage.html":{"ref":"/coverage.html","tf":0.014598540145985401}}}}},"e":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.015625},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.010706638115631691},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.015625},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.010706638115631691},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.015625},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.010706638115631691},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.011461318051575931},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.010075566750629723},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.016260162601626018},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.01627906976744186},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.033854166666666664},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.02569593147751606},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.012429378531073447},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.02830188679245283},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.09239130434782608},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.033854166666666664},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.02569593147751606},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.012429378531073447},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.02830188679245283},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.033854166666666664},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.02569593147751606},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.012429378531073447},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.02830188679245283},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.022538552787663108},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.034383954154727794},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.027707808564231738},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.032520325203252036},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.010101010101010102},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.02558139534883721},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.01020408163265306},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.018914473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.010089686098654708},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.010321100917431193}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.006423982869379015},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.006423982869379015},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.006423982869379015},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.007556675062972292},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.011627906976744186},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"i":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.015479876160990712}}}},"x":{"docs":{},"j":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}},"v":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.04068522483940043},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.04068522483940043},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.04068522483940043},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.037783375314861464},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.037209302325581395}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115}}}}}},"s":{"docs":{},"t":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.008565310492505354},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.008565310492505354},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.008565310492505354},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.010075566750629723},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.0069767441860465115}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.05263157894736842},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.026041666666666668},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.027837259100642397},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.00903954802259887},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.05660377358490566},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.026041666666666668},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.027837259100642397},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.00903954802259887},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.05660377358490566},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.026041666666666668},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.027837259100642397},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.00903954802259887},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.05660377358490566},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.05575326215895611},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.017191977077363897},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.020151133501259445},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.006920415224913495},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.018970189701897018},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.006734006734006734},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.023255813953488372},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.006802721088435374},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.007401315789473684},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.006726457399103139},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.05102040816326531},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.006880733944954129}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.018867924528301886},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.018867924528301886},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.018867924528301886},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":5.00355871886121},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}},"p":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}},"n":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004934210526315789},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0045871559633027525}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.005931198102016607}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.005649717514124294},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.005649717514124294},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.005649717514124294},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0057670126874279125},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.005611672278338945},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.005668934240362812},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.005756578947368421},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.005605381165919282},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.005733944954128441}},"i":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"c":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.01238390092879257}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.018575851393188854},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.041666666666666664},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.042826552462526764},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.031638418079096044},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.0660377358490566},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.041666666666666664},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.042826552462526764},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.031638418079096044},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.0660377358490566},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.041666666666666664},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.042826552462526764},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.031638418079096044},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.0660377358490566},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.02609727164887307},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.025787965616045846},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.027707808564231738},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0265282583621684},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.02710027100271003},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.025813692480359147},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.027906976744186046},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.026077097505668934},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.023026315789473683},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0257847533632287},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.05102040816326531},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.026376146788990827}},".":{"docs":{},"d":{"docs":{},"o":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"o":{"docs":{},"p":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"r":{"docs":{},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.007909604519774011},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.007909604519774011},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.007909604519774011},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0166073546856465},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.008073817762399077},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.013468013468013467},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.012471655328798186},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.007401315789473684},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.007847533632286996},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.010321100917431193}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/modules.html":{"ref":"/modules.html","tf":0.1},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}},"c":{"docs":{},"h":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}},"v":{"docs":{},"g":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05},"/modules.html":{"ref":"/modules.html","tf":0.1},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"=":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},":":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},",":{"docs":{},"e":{"docs":{},"y":{"docs":{},"j":{"docs":{},"m":{"docs":{},"a":{"docs":{},"w":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"l":{"2":{"docs":{},"h":{"docs":{},"v":{"docs":{},"b":{"docs":{},"w":{"docs":{},"u":{"docs":{},"v":{"docs":{},"e":{"docs":{},"m":{"docs":{},"f":{"docs":{},"j":{"docs":{},"a":{"docs":{},"y":{"9":{"docs":{},"k":{"docs":{},"z":{"docs":{},"x":{"docs":{},"y":{"docs":{},"v":{"docs":{},"y":{"3":{"docs":{},"j":{"1":{"docs":{},"z":{"docs":{},"g":{"docs":{},"r":{"docs":{},"s":{"docs":{},"z":{"docs":{},"s":{"9":{"docs":{},"z":{"docs":{},"c":{"docs":{},"m":{"docs":{},"m":{"docs":{},"v":{"docs":{},"b":{"docs":{},"w":{"9":{"docs":{},"k":{"docs":{},"d":{"docs":{},"w":{"docs":{},"x":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"5":{"docs":{},"n":{"docs":{},"z":{"docs":{},"m":{"docs":{},"f":{"docs":{},"j":{"docs":{},"d":{"docs":{},"g":{"9":{"docs":{},"y":{"docs":{},"e":{"docs":{},"s":{"5":{"0":{"docs":{},"c":{"docs":{},"y":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"z":{"docs":{},"l":{"docs":{},"c":{"docs":{},"n":{"docs":{},"n":{"docs":{},"p":{"docs":{},"b":{"2":{"4":{"docs":{},"i":{"docs":{},"o":{"docs":{},"j":{"docs":{},"m":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"v":{"docs":{},"d":{"docs":{},"x":{"docs":{},"j":{"docs":{},"j":{"docs":{},"z":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"b":{"3":{"docs":{},"q":{"docs":{},"i":{"docs":{},"o":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"j":{"docs":{},"z":{"docs":{},"b":{"3":{"docs":{},"v":{"docs":{},"y":{"docs":{},"y":{"2":{"docs":{},"v":{"docs":{},"z":{"docs":{},"i":{"docs":{},"j":{"docs":{},"p":{"docs":{},"b":{"docs":{},"i":{"docs":{},"m":{"5":{"docs":{},"n":{"docs":{},"o":{"docs":{},"i":{"8":{"docs":{},"v":{"docs":{},"l":{"2":{"docs":{},"h":{"docs":{},"v":{"docs":{},"b":{"docs":{},"w":{"docs":{},"u":{"docs":{},"v":{"docs":{},"e":{"docs":{},"m":{"docs":{},"f":{"docs":{},"j":{"docs":{},"a":{"docs":{},"y":{"9":{"docs":{},"k":{"docs":{},"z":{"docs":{},"x":{"docs":{},"y":{"docs":{},"v":{"docs":{},"y":{"3":{"docs":{},"j":{"1":{"docs":{},"z":{"docs":{},"g":{"docs":{},"r":{"docs":{},"s":{"docs":{},"z":{"docs":{},"s":{"9":{"docs":{},"z":{"docs":{},"c":{"docs":{},"m":{"docs":{},"m":{"docs":{},"v":{"docs":{},"b":{"docs":{},"w":{"9":{"docs":{},"k":{"docs":{},"d":{"docs":{},"w":{"docs":{},"x":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"r":{"docs":{},"z":{"docs":{},"i":{"docs":{},"l":{"0":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"v":{"docs":{},"d":{"docs":{},"x":{"docs":{},"j":{"docs":{},"j":{"docs":{},"z":{"docs":{},"x":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"2":{"5":{"0":{"docs":{},"z":{"docs":{},"w":{"5":{"0":{"docs":{},"i":{"docs":{},"j":{"docs":{},"p":{"docs":{},"b":{"docs":{},"i":{"docs":{},"i":{"docs":{},"a":{"docs":{},"i":{"docs":{},"x":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"b":{"docs":{},"w":{"docs":{},"f":{"docs":{},"w":{"docs":{},"c":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{},"z":{"3":{"docs":{},"m":{"docs":{},"i":{"docs":{},"o":{"docs":{},"i":{"docs":{},"j":{"docs":{},"b":{"docs":{},"q":{"docs":{},"u":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"z":{"docs":{},"s":{"7":{"docs":{},"o":{"docs":{},"y":{"docs":{},"j":{"9":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0192090395480226},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0192090395480226},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0192090395480226},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0196078431372549},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.019079685746352413},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.01927437641723356},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.02055921052631579},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.01905829596412556},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.022935779816513763},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.07692307692307693}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0024671052631578946},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}},"(":{"docs":{},"a":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.004519774011299435},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.004519774011299435},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.004519774011299435},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00461361014994233},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.004489337822671156},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0045351473922902496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.006880733944954129}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":5.004587155963303},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.014925373134328358}}},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/coverage.html":{"ref":"/coverage.html","tf":0.0364963503649635}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/coverage.html":{"ref":"/coverage.html","tf":0.0364963503649635}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881},"/coverage.html":{"ref":"/coverage.html","tf":0.06569343065693431}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/coverage.html":{"ref":"/coverage.html","tf":0.029197080291970802}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}}}}}}}}}}}},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.03125},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.02569593147751606},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.03125},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.02569593147751606},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.03125},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.02569593147751606},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.034383954154727794},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.030226700251889168},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.032520325203252036},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.027906976744186046}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.006779661016949152},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.006779661016949152},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.006779661016949152},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.006920415224913495},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.006734006734006734},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.006802721088435374},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004934210526315789},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.006726457399103139},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.006880733944954129}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"e":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.007909604519774011},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.007909604519774011},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.007909604519774011},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.008073817762399077},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.007856341189674524},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.007936507936507936},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.005756578947368421},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.007847533632286996},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.008027522935779817}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.00903954802259887},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.00903954802259887},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.00903954802259887},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.00922722029988466},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.008978675645342313},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.009070294784580499},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.006578947368421052},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.008968609865470852},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.009174311926605505}},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"5":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.016304347826086956}}},"docs":{}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"3":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.016304347826086956}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"6":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.016304347826086956}}},"docs":{}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"4":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.016304347826086956}}},"docs":{}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.016304347826086956}}},"docs":{}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"5":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}},"docs":{}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"3":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"6":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}},"docs":{}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"4":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}},"docs":{}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"0":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"1":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.016304347826086956}}},"docs":{}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}},"docs":{}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"u":{"docs":{},"e":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.02711864406779661},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.02711864406779661},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.02711864406779661},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.02768166089965398},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.026936026936026935},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.027210884353741496},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.029605263157894735},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.026905829596412557},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.027522935779816515}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.00830367734282325},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.003367003367003367},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.004111842105263158},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.004484304932735426},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763},"/coverage.html":{"ref":"/coverage.html","tf":0.0072992700729927005}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}},"o":{"docs":{},"f":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.03804347826086957}}}}}}},"u":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.015479876160990712}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0022598870056497176},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0022598870056497176},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0022598870056497176},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.002306805074971165},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0022675736961451248},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0022935779816513763}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}},"p":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.009287925696594427},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.009302325581395349}}}}}},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02786377708978328},"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.018229166666666668},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.019271948608137045},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.018229166666666668},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.019271948608137045},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.018229166666666668},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.019271948608137045},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.004744958481613286},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.02005730659025788},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.020151133501259445},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.010380622837370242},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.024390243902439025},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.01122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.023255813953488372},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.01020408163265306},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.009046052631578948},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.010089686098654708},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.010321100917431193}},"a":{"docs":{},"g":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.002244668911335578},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}}},"v":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}}},"u":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.003389830508474576},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.003389830508474576},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.003389830508474576},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.011862396204033215},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0034602076124567475},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.006734006734006734},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.003401360544217687},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.003289473684210526},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0033632286995515697},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0034403669724770644},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}},"b":{"docs":{},"l":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.038461538461538464}}}}}}}},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.01542111506524318}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.010169491525423728},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.010169491525423728},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.010169491525423728},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.010380622837370242},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.010101010101010102},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.01473922902494331},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.009868421052631578},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.011210762331838564},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.02040816326530612},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.010321100917431193}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.013559322033898305},"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.013559322033898305},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.013559322033898305},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.01384083044982699},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.013468013468013467},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.013605442176870748},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.019736842105263157},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.013452914798206279},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.013761467889908258}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.001644736842105263},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.006191950464396285}}}}},"a":{"docs":{},"p":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0057306590257879654},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.005037783375314861},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.005420054200542005},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.004651162790697674}}}}},"a":{"docs":{},"y":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.0026041666666666665},"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.0021413276231263384},"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/injectables/AutoReadDescriber.html":{"ref":"/injectables/AutoReadDescriber.html","tf":0.009433962264150943},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.0026041666666666665},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.0021413276231263384},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultReadDescriber.html":{"ref":"/classes/DefaultReadDescriber.html","tf":0.009433962264150943},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.0026041666666666665},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.0021413276231263384},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ReadDescriber.html":{"ref":"/classes/ReadDescriber.html","tf":0.009433962264150943},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/ReadState.html":{"ref":"/interfaces/ReadState.html","tf":0.01020408163265306},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}},"n":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"t":{"docs":{},"o":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.01694915254237288},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.01694915254237288},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.01694915254237288},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0071174377224199285},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.01730103806228374},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.016835016835016835},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.017006802721088437},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.023848684210526317},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.016816143497757848},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.017201834862385322}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.1},"/modules/CruddleModule.html":{"ref":"/modules/CruddleModule.html","tf":0.029850746268656716}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.002242152466367713},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}},"_":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0035587188612099642},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"/injectables/AutoFormDescriber.html":{"ref":"/injectables/AutoFormDescriber.html","tf":0.004282655246252677},"/classes/DefaultFormDescriber.html":{"ref":"/classes/DefaultFormDescriber.html","tf":0.004282655246252677},"/classes/FormDescriber.html":{"ref":"/classes/FormDescriber.html","tf":0.004282655246252677},"/interfaces/DefaultFormOptions.html":{"ref":"/interfaces/DefaultFormOptions.html","tf":0.0025188916876574307},"/interfaces/FormState.html":{"ref":"/interfaces/FormState.html","tf":0.002325581395348837}},"e":{"docs":{},"_":{"docs":{"/injectables/AutoDeleteDescriber.html":{"ref":"/injectables/AutoDeleteDescriber.html","tf":0.005208333333333333},"/classes/DefaultDeleteDescriber.html":{"ref":"/classes/DefaultDeleteDescriber.html","tf":0.005208333333333333},"/classes/DeleteDescriber.html":{"ref":"/classes/DeleteDescriber.html","tf":0.005208333333333333},"/interfaces/DefaultDeleteOptions.html":{"ref":"/interfaces/DefaultDeleteOptions.html","tf":0.0028653295128939827},"/interfaces/DeleteState.html":{"ref":"/interfaces/DeleteState.html","tf":0.0027100271002710027}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"/injectables/AutoListDescriber.html":{"ref":"/injectables/AutoListDescriber.html","tf":0.0011299435028248588},"/classes/DefaultListDescriber.html":{"ref":"/classes/DefaultListDescriber.html","tf":0.0011299435028248588},"/classes/ListDescriber.html":{"ref":"/classes/ListDescriber.html","tf":0.0011299435028248588},"/interfaces/DefaultListOptions.html":{"ref":"/interfaces/DefaultListOptions.html","tf":0.0011534025374855825},"/interfaces/FilterState.html":{"ref":"/interfaces/FilterState.html","tf":0.001122334455667789},"/interfaces/ListMode.html":{"ref":"/interfaces/ListMode.html","tf":0.0011337868480725624},"/interfaces/ListState.html":{"ref":"/interfaces/ListState.html","tf":0.0008223684210526315},"/interfaces/PagingState.html":{"ref":"/interfaces/PagingState.html","tf":0.0011210762331838565},"/interfaces/SortState.html":{"ref":"/interfaces/SortState.html","tf":0.0011467889908256881}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.002372479240806643}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"/classes/ScreenDescriber.html":{"ref":"/classes/ScreenDescriber.html","tf":0.0011862396204033216}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"5":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"3":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"6":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"4":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"5":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"5":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"3":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"3":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"6":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"6":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"4":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"4":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"5":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"5":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"3":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"3":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"6":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"6":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"4":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"4":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"0":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"1":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"u":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.010869565217391304}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"/classes/CruddleModuleInjector.html":{"ref":"/classes/CruddleModuleInjector.html","tf":0.005434782608695652}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"length":3582},"corpusTokens":["0","0/0","0/15","1","1/1","10","100","11","19/19","2","2/2","2/3","3/3","4","4/4","66","7/7","90","_","_.clone","_.clone(act","_.filter(this.sort","_.isarray(attroptions.valu","_.without(this.filt","___autodeletedescriber_5","___autoformdescriber_3","___autolistdescriber_6","___autoreaddescriber_4","___nglocalization_2","__autodeletedescriber_5:import5.autodeletedescrib","__autoformdescriber_3:import3.autoformdescrib","__autolistdescriber_6:import6.autolistdescrib","__autoreaddescriber_4:import4.autoreaddescrib","__nglocalization_2:import2.nglocaleloc","_autodeletedescriber_5","_autodeletedescriber_5():import5.autodeletedescrib","_autoformdescriber_3","_autoformdescriber_3():import3.autoformdescrib","_autolistdescriber_6","_autolistdescriber_6():import6.autolistdescrib","_autoreaddescriber_4","_autoreaddescriber_4():import4.autoreaddescrib","_commonmodule_0","_commonmodule_0:import2.commonmodul","_cruddlemodule_1","_cruddlemodule_1:import1.cruddlemodul","_instanc","_instance_","_nglocalization_2","_nglocalization_2():import2.nglocaleloc","a.ord","abstract","act","action","actiondescript","actionst","actual","actuallyspecifi","add","addalert(alert","addfilt","addfilter(prop","addit","alert","alert'","alert.id","alertst","allow","allowsfor","andit'","angular","angular/common","angular/cor","api","applic","applicationmodul","arbitrari","around","asc","ascend","ask","assoc","assoc.readonli","assoc.typ","associ","associationdescript","associationtyp","assocopt","assocs[key","async","attr","attr.readonli","attr.typ","attr.type.opt","attr.type.typ","attribut","attributedescript","attributes/associ","attributetyp","attropt","attroptions.valu","attrs[key","autodeletedescrib","autoformdescrib","autolistdescrib","automat","autoreaddescrib","avail","await","b","b.order","backend","base","basic","be","bead","behav","behaviorsubject","behaviorsubject(refreshprops(vis","behaviour","beign","below","benefit","between","blanketli","boolean","brows","browser","button","buttonsto","by.thi","camel","cancel","cancel(_st","cancel(inst","cancel(st","cancel(thi","cancel?(st","case","case,then","cases(such","cast","certainfunction","chang","check","child","class","class.in","clear","clearfilt","clearfiltering(refresh","clearsort","clearsorting(refresh","code","code,cruddle'","column","come","commonmodul","compon","components.thi","components/us","componentsfor","concat([alert","concat(_.values(this.getassoci","concept","const","construct","constructor","constructor(model","constructor(par","constructor(parent:import0.injector","contain","containpagin","contextu","contextualact","contextualactiondescript","contextualactionst","correspond","coverag","creat","create/edit","createintern","createinternal():import1.cruddlemodul","crud(l","cruddl","cruddle:propopt","cruddlemodul","cruddlemoduleinjector","cruddlemodulengfactori","cruddlemodulengfactory:import0.ngmodulefactori","cruddleusag","crudl","current","custom","data","default","defaultdeletedescrib","defaultdeletedescriber(model","defaultdeleteopt","defaultformdescrib","defaultformdescriber(model","defaultformopt","defaultlistdescrib","defaultlistdescriber(model","defaultlistopt","defaultreaddescrib","defaultreaddescriber(model","definit","del","del(thi","delet","delete(inst","delete(st","deletedescrib","deletest","depend","desc","desc.path","desc.vis","descend","describ","describe(model","describeri","descript","descriptionsof","destroyintern","destroyinternal():void","detail","develop","differ","directli","directori","display","do(thi","doc","docstest","document","documentat","don't","down","drive","e.g","each","edit","editing/cr","element","emit","empti","enabl","encourag","enum","enumattributetypeopt","enumattributetypeoptions).values.map((v","equal","error","event","eventemitt","exampl","execut","exist","export","extend","extra","extrem","field","figur","figureout","file","filter","filter((item","filter(desc","filterst","first","firstpag","firstpage(refresh","fixm","form","formdescrib","formstat","function","gener","generallyact","generategener","getact","getassoci","getassociations(this.model","getattribut","getattributes(this.model","getcontextualact","getintern","getinternal(token","getinternal(token:any,notfoundresult:any):ani","getmodelopt","getmodeloptions(this.model).nam","getpropertyopt","getpropertyoptions(this.model","getscreen","glue","haspag","have","here","html","huge","i.","id","identifi","ignor","implement","import","import0","import0.ngmodulefactory(cruddlemoduleinjector,import1.cruddlemodul","import0.Éµngmoduleinjector","import1","import1.cruddlemodul","import2","import2.commonmodul","import2.ngloc","import2.nglocalelocalization(this.parent.get(import0.locale_id","import3","import3.autoformdescrib","import4","import4.autoreaddescrib","import5","import5.autodeletedescrib","import6","import6.autolistdescrib","index","inflect","info","inform","informationinto","initi","inject","injector","instal","instanc","instance/row","instanti","interact","interfac","intern","internalattributetyp","internalattributetype.enum","introduct","isperform","it'","item","item.id","itemsperpag","itself","keep","key","label","last","lastpag","lastpage(refresh","latest","librari","licens","license.md","line:no","list","list'","list.thi","listdescrib","listmod","liststat","liter","lodash","look","manual","map","map(desc","mappedassoc","mappedassocs[key","mappedattr","mappedattrs[key","mark","match","math.max(itemsperpag","math.max(math.min(pag","messag","meta","metadata","method","minim","misc","miscellan","mit","mode","mode.id","mode.thi","modeid","model","model'","model_prop_options_meta_key","modelconstructor","modelerror","models.th","modelsaf","modelsafemodel","modul","more","move","name","navig","need","neg","new","next","nextpag","nextpage(refresh","nglocaleloc","ngmodul","note","notfoundresult","noth","nothing.if","npm","null","number","numitem","numpag","object","object.keys(assoc","object.keys(attr","observ","on","onc","onlin","oper","option","order","out","overrid","overridden","overriddento","overridethi","overview","page","page.thi","pagin","paging.itemsperpag","paging.numpag","paging.pag","pagingst","param","paramet","partial","path","per","perform","plain","pleas","plural","pluralize(_.camelcase(nam","popul","popupon","possibl","pre","previou","previouspag","previouspage(refresh","producesscreen","project","promis","prop","prop.path","properti","propertydescript","propertyst","propertyvaluedescript","propopt","propssubject","propssubject.asobserv","protect","provid","providedbi","providedto","providerinclud","push","re","read","readdescrib","readm","readonli","readstat","refresh","refresh(st","refresh(thi","refreshprop","rel","relat","relev","remov","removealert(alert","removefilt","removefilter(filt","render","requir","requiredbi","reset","resolv","respect","result","return","run","rxj","same","san","save","save(inst","save(st","save(thi","screen","screen.plur","screen.singular","screen.vis","screendescrib","screendescript","screenshould","screenstat","section","see","select","sens","separ","set","setitemsperpag","setitemsperpage(itemsperpag","setmod","setmode(mod","setpag","setpage(pag","setvisible(path","shallow","share","show","similar","singl","singular","singularize(_.camelcase(nam","sort","sort((a","sort(prop","sortabl","sorted.path","sorting.concat","sortord","sortorder.asc","sortorder.desc","sortstat","sourc","sourcemappingurl=data:application/json;base64,eyjmawxlijoil2hvbwuvemfjay9kzxyvy3j1zgrszs9zcmmvbw9kdwxllm5nzmfjdg9yes50cyisinzlcnnpb24iojmsinnvdxjjzvjvb3qioiiilcjzb3vyy2vzijpbim5noi8vl2hvbwuvemfjay9kzxyvy3j1zgrszs9zcmmvbw9kdwxllnrzil0sinnvdxjjzxndb250zw50ijpbiiaixswibwfwcgluz3mioijbqufbozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7ozs7oyj9","specif","specifi","specificvers","src/base.t","src/delete.t","src/form.t","src/list.t","src/module.ngfactory.t","src/module.t","src/read.t","start","state","state.do","state.do.bind(st","state.thi","statement","static/hard","stillne","stop","store","string","subject","such","suit","super(model","super(par","super.st","support","svg","t","take","templat","temporarili","test","testlicens","text","that'","thefunct","this.__autodeletedescriber_5","this.__autoformdescriber_3","this.__autolistdescriber_6","this.__autoreaddescriber_4","this.__nglocalization_2","this._autodeletedescriber_5","this._autoformdescriber_3","this._autolistdescriber_6","this._autoreaddescriber_4","this._commonmodule_0","this._cruddlemodule_1","this._nglocalization_2","this.alert","this.alerts.filter((item","this.cancel.bind(thi","this.delete.bind(thi","this.filt","this.filters.push","this.getactions().map((act","this.getcontextualactions().map((act","this.getscreen","this.haspag","this.mod","this.model","this.opt","this.options.cancel","this.options.cancel(st","this.options.delete(st","this.options.refresh(st","this.options.save(st","this.pag","this.propssubject.next(refreshprops(path","this.refresh","this.refresh.bind(thi","this.refreshes.emit(data","this.save.bind(thi","this.setpage(1","this.setpage(paging.numpag","this.setpage(paging.pag","this.sort","this.vis","thought","three","token","track","true","tslint:dis","turn","type","typedoci","typeof","types.thes","ui","under","uniqu","unless","up","updat","us","usag","user","usinghtml","v","validationsautomat","valu","values(this.getattribut","variabl","variant","view","visibl","visible.indexof(desc.path","visual","void","want","wantto","way","whatev","whether","willstil","without","work","wrap","write","zero","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"/index.html":{"url":"/index.html","title":"readme - index","body":"\n                   \nCruddle\nIntroduction\nCruddle is an Angular 2 library that provides functionality to generategeneric CRUD(L) screens from ModelSafe data models.The huge benefit of this is that screens in a CRUDL-based application can have their fields and validationsautomatically provided by ModelSafe, so the actual work you need to do develop Angular componentsfor CRUDL screens is minimal. Cruddle provides all of the functionality to describe how a screenshould look and perform from a ModelSafe model, and you just need to turn that stateful informationinto Angular templates.\nFor a general run down of how the library works, see the usage section below.\nInstallation\nnpm install --save cruddleUsage\nGeneral Concepts\nCruddle separates the concept of a screen into three components:\n\nThe description of a screen, which might describe the columns to show in a list, what buttonsto show on the screen and so on. Basically a literal description of how the UI might function.\nThe user interface (UI) which takes the description of a screen and renders it usingHTML and then creates visual elements that can change the screen state.\nThe state of a screen, which the UI interacts with in order to keep track of certainfunctionality related to the screen. For example, the state of a list might containpagination information\n\nIn a sense, the UI can be thought of as visual glue between a screen describer (producesscreen descriptions) and a screen state.\nEach different CRUDL action has its own respective describer and state types.These can be used to write the base components/user interfaces for each CRUDL action.\nCreate & Update\nIn most applications, a create or update screen will generallyact the same or extremely similar when it comes to UI. To encourage writing minimal code,Cruddle's create and update functionality are described by the single FormDescriber class.In order to generate a FormState, you should extend the FormDescriber with a model-specificversion.\nIf you have no custom functionality, you can use the AutoFormDescriber providerincluded in CruddleModule to generate default form describers for models. You will stillneed to provide the save function to use for saving the form data.\nRead\nIn order to generate a ReadState, you should extend the ReadDescriber with a model-specificversion.\nIf you have no custom functionality, you can use the AutoReadDescriber providerincluded in CruddleModule to generate default read describers for models.\nDelete\nIn order to generate a DeleteState, you should extend the DeleteDescriber with a model-specificversion.\nIf you have no custom functionality, you can use the AutoDeleteDescriber providerincluded in CruddleModule to generate default delete describers for models. You willstill need to provide the delete function to use for deleting the model data.\nNote that some applications may have the delete screen as a popupon the list screen rather than a separate screen. If that's the case,then the delete component can just be ignored and a delete action can beadded to the list component.\nList\nIn order to generate a ListState, you should extend the ListDescriber with a model-specificversion.\nIf you have no custom functionality, you can use the AutoListDescriber providerincluded in CruddleModule to generate default delete describers for models. You willstill need to provide the refresh function to use for refreshing the list screen.\nDocumentatation\nThe API documentation generated using TypeDocis available online.\nTo generate API documentation from the code into the docs directory, run:\nnpm run docsTesting\nTo execute the test suite run:\nnpm run testLicense\nThis project is licensed under the MIT license. Please see LICENSE.md for more details.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/overview.html":{"url":"/overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/modules.html":{"url":"/modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    CruddleModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/modules/CruddleModule.html":{"url":"/modules/CruddleModule.html","title":"module - CruddleModule","body":"\n                   \n\n\n  Modules\n  CruddleModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/module.ts\n        \n\n            \n                Description\n            \n            \n                The module containing all of the Cruddle components.This should be imported into your relevant applicationmodules.\n\n            \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                AutoFormDescriber\n                            \n                            \n                                AutoReadDescriber\n                            \n                            \n                                AutoDeleteDescriber\n                            \n                            \n                                AutoListDescriber\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AutoFormDescriber } from './form';\nimport { AutoReadDescriber } from './read';\nimport { AutoDeleteDescriber } from './delete';\nimport { AutoListDescriber } from './list';\n\n/**\n * The module containing all of the Cruddle components.\n * This should be imported into your relevant application\n * modules.\n */\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    AutoFormDescriber,\n    AutoReadDescriber,\n    AutoDeleteDescriber,\n    AutoListDescriber\n  ]\n})\nexport class CruddleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/AutoDeleteDescriber.html":{"url":"/injectables/AutoDeleteDescriber.html","title":"injectable - AutoDeleteDescriber","body":"\n                   \n\n\n\n\n\n  Injectables\n  AutoDeleteDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/delete.ts\n        \n\n            \n                Description\n            \n            \n                Describes a delete screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state of a delete screen from the describer. \n            \n                                        \n                                            Returns:     DeleteState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    delete(state: DeleteState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Deletes a model instance.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current delete screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to delete.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options to provide.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the instance has been deleted.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    cancel(_state: DeleteState, _instance_: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancels deleting a model instance.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current delete screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to cancel deleting for.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the delete has been cancelled.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a delete screen. */\nexport interface DeleteState extends ScreenState {\n  /**\n   * Deletes a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  delete(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a delete screen. */\nexport abstract class DeleteDescriber extends ScreenDescriber {\n  /** Initializes the state of a delete screen from the describer. */\n  state(): DeleteState {\n    let del = this.delete.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      /** The wrapped delete functionality. */\n      async delete(instance: T, options?: any): Promise {\n        return del(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Deletes a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  async abstract delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  async cancel(_state: DeleteState, _instance_: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a delete describer. */\nexport interface DefaultDeleteOptions {\n  /** The delete function to provide to the default describer. */\n  delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: DeleteState, instance: T): Promise;\n}\n\n/** A delete describer for a model which uses default behaviour. */\nexport class DefaultDeleteDescriber extends DeleteDescriber {\n  /** The options for the default describer. */\n  options: DefaultDeleteOptions;\n\n  /**\n   * Constructs the default delete describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default delete options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultDeleteOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Deletes the instance using the delete function provided as an option. */\n  async delete(state: DeleteState, instance: T, options?: any): Promise {\n    return this.options.delete(state, instance, options);\n  }\n\n  /** Cancels deleting the instance using the cancel function provided as an option. */\n  async cancel(state: DeleteState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default delete describers from ModelSafe models.\n * The delete describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoDeleteDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultDeleteOptions): DefaultDeleteDescriber {\n    return new DefaultDeleteDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/AutoFormDescriber.html":{"url":"/injectables/AutoFormDescriber.html","title":"injectable - AutoFormDescriber","body":"\n                   \n\n\n\n\n\n  Injectables\n  AutoFormDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/form.ts\n        \n\n            \n                Description\n            \n            \n                Describes a form screen, which is generally a shared create/edit screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initialize form state from this form describer. \n            \n                                        \n                                            Returns:     FormState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     save\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    save(state: FormState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves a model instance using whatever backend requiredby the user of this library. This will be automatically be providedto the form state when it is constructed.\n            This must be provided by a child class.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current form screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The model instance to save.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options provided.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the instance has been saved.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    cancel(_state: FormState, _instance: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancel saving a model instance. By default this does nothing.If you need the screen to have a cancel button, overridethis function in a child class. This will automatically be providedto the form state when it is constructed.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current form screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The model instance to cancel saving.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options provided.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor, ModelErrors } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state for a form screen. */\nexport interface FormState extends ScreenState {\n  errors: ModelErrors;\n\n  /**\n   * Saves an instance the resolves with the updated instance using the\n   * function provided by the describer.\n   *\n   * @param instance The instance to save.\n   * @param options Any options to provide.\n   * @returns A promise that resolves with the updated instance.\n   */\n  save(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels editing/creating an instance using the function provided\n   * by the describer. This is optional and might be required in some cases\n   * (such as when a 'Cancel' button is required on the screen.\n   *\n   * @param instance The instance to cancel editing.\n   * @returns A promise that resolves when editing is cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a form screen, which is generally a shared create/edit screen. */\nexport abstract class FormDescriber extends ScreenDescriber {\n  /** Initialize form state from this form describer. */\n  state(): FormState {\n    let save = this.save.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      errors: {},\n\n      /** The wrapped save functionality. */\n      async save(instance: T, options?: any): Promise {\n        return save(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Saves a model instance using whatever backend required\n   * by the user of this library. This will be automatically be provided\n   * to the form state when it is constructed.\n   *\n   * This must be provided by a child class.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to save.\n   * @param options Any extra options provided.\n   * @returns A promise that resolves when the instance has been saved.\n   */\n  async abstract save(state: FormState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancel saving a model instance. By default this does nothing.\n   * If you need the screen to have a cancel button, override\n   * this function in a child class. This will automatically be provided\n   * to the form state when it is constructed.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to cancel saving.\n   * @param options Any extra options provided.\n   */\n  async cancel(_state: FormState, _instance: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a form describer. */\nexport interface DefaultFormOptions {\n  /** The save function to provide to the default describer. */\n  save(state: FormState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: FormState, instance: T): Promise;\n}\n\n/** A form describer for a model which uses default behaviour. */\nexport class DefaultFormDescriber extends FormDescriber {\n  /** The options for the default describer. */\n  options: DefaultFormOptions;\n\n  /**\n   * Constructs the default form describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default form options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultFormOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Saves the form data using the save function provided as an option. */\n  async save(state: FormState, instance: T, options?: any): Promise {\n    return this.options.save(state, instance, options);\n  }\n\n  /** Cancels saving the form using the cancel function provided as an option. */\n  async cancel(state: FormState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default form describers from ModelSafe models.\n * The form describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoFormDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultFormOptions): DefaultFormDescriber {\n    return new DefaultFormDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/AutoListDescriber.html":{"url":"/injectables/AutoListDescriber.html","title":"injectable - AutoListDescriber","body":"\n                   \n\n\n\n\n\n  Injectables\n  AutoListDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                Describes a list screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state for the list screen described by this class. \n            \n                                        \n                                            Returns:     ListState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     refresh\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    refresh(state: ListState)\n                                \n                            \n            \n                            \n                                \n                                        Refreshes the list data using a list state.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The list state.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves with the new list data.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/AutoReadDescriber.html":{"url":"/injectables/AutoReadDescriber.html","title":"injectable - AutoReadDescriber","body":"\n                   \n\n\n\n\n\n  Injectables\n  AutoReadDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/read.ts\n        \n\n            \n                Description\n            \n            \n                Describes a read screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state for a read screen. \n            \n                                        \n                                            Returns:     ReadState\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a read (view) screen. */\n// tslint:disable-next-line:no-empty-interface\nexport interface ReadState extends ScreenState {}\n\n/** Describes a read screen. */\nexport abstract class ReadDescriber extends ScreenDescriber {\n  /** Initializes the state for a read screen. */\n  state(): ReadState {\n    return super.state();\n  }\n}\n\n/** A read describer for a model without any custom behaviour. */\nexport class DefaultReadDescriber extends ReadDescriber {}\n\n/**\n * Generates default read describers from ModelSafe models.\n * The read describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoReadDescriber {\n  /** Automatically generates a read describer for a model. */\n  describe(model: ModelConstructor): DefaultReadDescriber {\n    return new DefaultReadDescriber(model);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/CruddleModuleInjector.html":{"url":"/classes/CruddleModuleInjector.html","title":"class - CruddleModuleInjector","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  CruddleModuleInjector\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/module.ngfactory.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(parent: Injector)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createInternal\n                                \n                            \n            \n                            \n                                \n            createInternal()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     CruddleModule\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getInternal\n                                \n                            \n            \n                            \n                                \n            getInternal(token: any, notFoundResult: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     destroyInternal\n                                \n                            \n            \n                            \n                                \n            destroyInternal()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     ___AutoDeleteDescriber_5\n                                \n                            \n                            \n                                \n                                    ___AutoDeleteDescriber_5:     AutoDeleteDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ___AutoFormDescriber_3\n                                \n                            \n                            \n                                \n                                    ___AutoFormDescriber_3:     AutoFormDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ___AutoListDescriber_6\n                                \n                            \n                            \n                                \n                                    ___AutoListDescriber_6:     AutoListDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ___AutoReadDescriber_4\n                                \n                            \n                            \n                                \n                                    ___AutoReadDescriber_4:     AutoReadDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ___NgLocalization_2\n                                \n                            \n                            \n                                \n                                    ___NgLocalization_2:     NgLocaleLocalization\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     _AutoDeleteDescriber_5\n                                \n                            \n                            \n                                \n                                    _AutoDeleteDescriber_5:     AutoDeleteDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     _AutoFormDescriber_3\n                                \n                            \n                            \n                                \n                                    _AutoFormDescriber_3:     AutoFormDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     _AutoListDescriber_6\n                                \n                            \n                            \n                                \n                                    _AutoListDescriber_6:     AutoListDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     _AutoReadDescriber_4\n                                \n                            \n                            \n                                \n                                    _AutoReadDescriber_4:     AutoReadDescriber\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     _CommonModule_0\n                                \n                            \n                            \n                                \n                                    _CommonModule_0:     CommonModule\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     _CruddleModule_1\n                                \n                            \n                            \n                                \n                                    _CruddleModule_1:     CruddleModule\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     _NgLocalization_2\n                                \n                            \n                            \n                                \n                                    _NgLocalization_2:     NgLocaleLocalization\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import * as import0 from '@angular/core';\nimport * as import1 from './module';\nimport * as import2 from '@angular/common';\nimport * as import3 from './form';\nimport * as import4 from './read';\nimport * as import5 from './delete';\nimport * as import6 from './list';\nclass CruddleModuleInjector extends import0.ÉµNgModuleInjector {\n  _CommonModule_0:import2.CommonModule;\n  _CruddleModule_1:import1.CruddleModule;\n  __NgLocalization_2:import2.NgLocaleLocalization;\n  __AutoFormDescriber_3:import3.AutoFormDescriber;\n  __AutoReadDescriber_4:import4.AutoReadDescriber;\n  __AutoDeleteDescriber_5:import5.AutoDeleteDescriber;\n  __AutoListDescriber_6:import6.AutoListDescriber;\n  constructor(parent:import0.Injector) {\n    super(parent,([] as any[]),([] as any[]));\n  }\n  get _NgLocalization_2():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID))); }\n    return this.__NgLocalization_2;\n  }\n  get _AutoFormDescriber_3():import3.AutoFormDescriber {\n    if ((this.__AutoFormDescriber_3 == null)) { (this.__AutoFormDescriber_3 = new import3.AutoFormDescriber()); }\n    return this.__AutoFormDescriber_3;\n  }\n  get _AutoReadDescriber_4():import4.AutoReadDescriber {\n    if ((this.__AutoReadDescriber_4 == null)) { (this.__AutoReadDescriber_4 = new import4.AutoReadDescriber()); }\n    return this.__AutoReadDescriber_4;\n  }\n  get _AutoDeleteDescriber_5():import5.AutoDeleteDescriber {\n    if ((this.__AutoDeleteDescriber_5 == null)) { (this.__AutoDeleteDescriber_5 = new import5.AutoDeleteDescriber()); }\n    return this.__AutoDeleteDescriber_5;\n  }\n  get _AutoListDescriber_6():import6.AutoListDescriber {\n    if ((this.__AutoListDescriber_6 == null)) { (this.__AutoListDescriber_6 = new import6.AutoListDescriber()); }\n    return this.__AutoListDescriber_6;\n  }\n  createInternal():import1.CruddleModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._CruddleModule_1 = new import1.CruddleModule();\n    return this._CruddleModule_1;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import1.CruddleModule)) { return this._CruddleModule_1; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_2; }\n    if ((token === import3.AutoFormDescriber)) { return this._AutoFormDescriber_3; }\n    if ((token === import4.AutoReadDescriber)) { return this._AutoReadDescriber_4; }\n    if ((token === import5.AutoDeleteDescriber)) { return this._AutoDeleteDescriber_5; }\n    if ((token === import6.AutoListDescriber)) { return this._AutoListDescriber_6; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const CruddleModuleNgFactory:import0.NgModuleFactory = new import0.NgModuleFactory(CruddleModuleInjector,import1.CruddleModule);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvemFjay9kZXYvY3J1ZGRsZS9zcmMvbW9kdWxlLm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5nOi8vL2hvbWUvemFjay9kZXYvY3J1ZGRsZS9zcmMvbW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIiAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/DefaultDeleteDescriber.html":{"url":"/classes/DefaultDeleteDescriber.html","title":"class - DefaultDeleteDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DefaultDeleteDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/delete.ts\n        \n\n            \n                Description\n            \n            \n                Describes a delete screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state of a delete screen from the describer. \n            \n                                        \n                                            Returns:     DeleteState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    delete(state: DeleteState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Deletes a model instance.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current delete screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to delete.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options to provide.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the instance has been deleted.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    cancel(_state: DeleteState, _instance_: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancels deleting a model instance.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current delete screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to cancel deleting for.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the delete has been cancelled.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a delete screen. */\nexport interface DeleteState extends ScreenState {\n  /**\n   * Deletes a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  delete(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a delete screen. */\nexport abstract class DeleteDescriber extends ScreenDescriber {\n  /** Initializes the state of a delete screen from the describer. */\n  state(): DeleteState {\n    let del = this.delete.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      /** The wrapped delete functionality. */\n      async delete(instance: T, options?: any): Promise {\n        return del(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Deletes a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  async abstract delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  async cancel(_state: DeleteState, _instance_: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a delete describer. */\nexport interface DefaultDeleteOptions {\n  /** The delete function to provide to the default describer. */\n  delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: DeleteState, instance: T): Promise;\n}\n\n/** A delete describer for a model which uses default behaviour. */\nexport class DefaultDeleteDescriber extends DeleteDescriber {\n  /** The options for the default describer. */\n  options: DefaultDeleteOptions;\n\n  /**\n   * Constructs the default delete describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default delete options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultDeleteOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Deletes the instance using the delete function provided as an option. */\n  async delete(state: DeleteState, instance: T, options?: any): Promise {\n    return this.options.delete(state, instance, options);\n  }\n\n  /** Cancels deleting the instance using the cancel function provided as an option. */\n  async cancel(state: DeleteState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default delete describers from ModelSafe models.\n * The delete describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoDeleteDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultDeleteOptions): DefaultDeleteDescriber {\n    return new DefaultDeleteDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/DefaultFormDescriber.html":{"url":"/classes/DefaultFormDescriber.html","title":"class - DefaultFormDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DefaultFormDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/form.ts\n        \n\n            \n                Description\n            \n            \n                Describes a form screen, which is generally a shared create/edit screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initialize form state from this form describer. \n            \n                                        \n                                            Returns:     FormState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     save\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    save(state: FormState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves a model instance using whatever backend requiredby the user of this library. This will be automatically be providedto the form state when it is constructed.\n            This must be provided by a child class.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current form screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The model instance to save.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options provided.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the instance has been saved.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    cancel(_state: FormState, _instance: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancel saving a model instance. By default this does nothing.If you need the screen to have a cancel button, overridethis function in a child class. This will automatically be providedto the form state when it is constructed.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current form screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The model instance to cancel saving.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options provided.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor, ModelErrors } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state for a form screen. */\nexport interface FormState extends ScreenState {\n  errors: ModelErrors;\n\n  /**\n   * Saves an instance the resolves with the updated instance using the\n   * function provided by the describer.\n   *\n   * @param instance The instance to save.\n   * @param options Any options to provide.\n   * @returns A promise that resolves with the updated instance.\n   */\n  save(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels editing/creating an instance using the function provided\n   * by the describer. This is optional and might be required in some cases\n   * (such as when a 'Cancel' button is required on the screen.\n   *\n   * @param instance The instance to cancel editing.\n   * @returns A promise that resolves when editing is cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a form screen, which is generally a shared create/edit screen. */\nexport abstract class FormDescriber extends ScreenDescriber {\n  /** Initialize form state from this form describer. */\n  state(): FormState {\n    let save = this.save.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      errors: {},\n\n      /** The wrapped save functionality. */\n      async save(instance: T, options?: any): Promise {\n        return save(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Saves a model instance using whatever backend required\n   * by the user of this library. This will be automatically be provided\n   * to the form state when it is constructed.\n   *\n   * This must be provided by a child class.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to save.\n   * @param options Any extra options provided.\n   * @returns A promise that resolves when the instance has been saved.\n   */\n  async abstract save(state: FormState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancel saving a model instance. By default this does nothing.\n   * If you need the screen to have a cancel button, override\n   * this function in a child class. This will automatically be provided\n   * to the form state when it is constructed.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to cancel saving.\n   * @param options Any extra options provided.\n   */\n  async cancel(_state: FormState, _instance: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a form describer. */\nexport interface DefaultFormOptions {\n  /** The save function to provide to the default describer. */\n  save(state: FormState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: FormState, instance: T): Promise;\n}\n\n/** A form describer for a model which uses default behaviour. */\nexport class DefaultFormDescriber extends FormDescriber {\n  /** The options for the default describer. */\n  options: DefaultFormOptions;\n\n  /**\n   * Constructs the default form describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default form options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultFormOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Saves the form data using the save function provided as an option. */\n  async save(state: FormState, instance: T, options?: any): Promise {\n    return this.options.save(state, instance, options);\n  }\n\n  /** Cancels saving the form using the cancel function provided as an option. */\n  async cancel(state: FormState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default form describers from ModelSafe models.\n * The form describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoFormDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultFormOptions): DefaultFormDescriber {\n    return new DefaultFormDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/DefaultListDescriber.html":{"url":"/classes/DefaultListDescriber.html","title":"class - DefaultListDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DefaultListDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                Describes a list screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state for the list screen described by this class. \n            \n                                        \n                                            Returns:     ListState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     refresh\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    refresh(state: ListState)\n                                \n                            \n            \n                            \n                                \n                                        Refreshes the list data using a list state.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The list state.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves with the new list data.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/DefaultReadDescriber.html":{"url":"/classes/DefaultReadDescriber.html","title":"class - DefaultReadDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DefaultReadDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/read.ts\n        \n\n            \n                Description\n            \n            \n                Describes a read screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state for a read screen. \n            \n                                        \n                                            Returns:     ReadState\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a read (view) screen. */\n// tslint:disable-next-line:no-empty-interface\nexport interface ReadState extends ScreenState {}\n\n/** Describes a read screen. */\nexport abstract class ReadDescriber extends ScreenDescriber {\n  /** Initializes the state for a read screen. */\n  state(): ReadState {\n    return super.state();\n  }\n}\n\n/** A read describer for a model without any custom behaviour. */\nexport class DefaultReadDescriber extends ReadDescriber {}\n\n/**\n * Generates default read describers from ModelSafe models.\n * The read describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoReadDescriber {\n  /** Automatically generates a read describer for a model. */\n  describe(model: ModelConstructor): DefaultReadDescriber {\n    return new DefaultReadDescriber(model);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/DeleteDescriber.html":{"url":"/classes/DeleteDescriber.html","title":"class - DeleteDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DeleteDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/delete.ts\n        \n\n            \n                Description\n            \n            \n                Describes a delete screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state of a delete screen from the describer. \n            \n                                        \n                                            Returns:     DeleteState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    delete(state: DeleteState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Deletes a model instance.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current delete screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to delete.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options to provide.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the instance has been deleted.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    cancel(_state: DeleteState, _instance_: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancels deleting a model instance.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current delete screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to cancel deleting for.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the delete has been cancelled.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a delete screen. */\nexport interface DeleteState extends ScreenState {\n  /**\n   * Deletes a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  delete(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a delete screen. */\nexport abstract class DeleteDescriber extends ScreenDescriber {\n  /** Initializes the state of a delete screen from the describer. */\n  state(): DeleteState {\n    let del = this.delete.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      /** The wrapped delete functionality. */\n      async delete(instance: T, options?: any): Promise {\n        return del(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Deletes a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  async abstract delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  async cancel(_state: DeleteState, _instance_: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a delete describer. */\nexport interface DefaultDeleteOptions {\n  /** The delete function to provide to the default describer. */\n  delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: DeleteState, instance: T): Promise;\n}\n\n/** A delete describer for a model which uses default behaviour. */\nexport class DefaultDeleteDescriber extends DeleteDescriber {\n  /** The options for the default describer. */\n  options: DefaultDeleteOptions;\n\n  /**\n   * Constructs the default delete describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default delete options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultDeleteOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Deletes the instance using the delete function provided as an option. */\n  async delete(state: DeleteState, instance: T, options?: any): Promise {\n    return this.options.delete(state, instance, options);\n  }\n\n  /** Cancels deleting the instance using the cancel function provided as an option. */\n  async cancel(state: DeleteState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default delete describers from ModelSafe models.\n * The delete describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoDeleteDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultDeleteOptions): DefaultDeleteDescriber {\n    return new DefaultDeleteDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/FormDescriber.html":{"url":"/classes/FormDescriber.html","title":"class - FormDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  FormDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/form.ts\n        \n\n            \n                Description\n            \n            \n                Describes a form screen, which is generally a shared create/edit screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initialize form state from this form describer. \n            \n                                        \n                                            Returns:     FormState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     save\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    save(state: FormState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves a model instance using whatever backend requiredby the user of this library. This will be automatically be providedto the form state when it is constructed.\n            This must be provided by a child class.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current form screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The model instance to save.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options provided.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the instance has been saved.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    cancel(_state: FormState, _instance: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancel saving a model instance. By default this does nothing.If you need the screen to have a cancel button, overridethis function in a child class. This will automatically be providedto the form state when it is constructed.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The current form screen state.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The model instance to cancel saving.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options provided.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor, ModelErrors } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state for a form screen. */\nexport interface FormState extends ScreenState {\n  errors: ModelErrors;\n\n  /**\n   * Saves an instance the resolves with the updated instance using the\n   * function provided by the describer.\n   *\n   * @param instance The instance to save.\n   * @param options Any options to provide.\n   * @returns A promise that resolves with the updated instance.\n   */\n  save(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels editing/creating an instance using the function provided\n   * by the describer. This is optional and might be required in some cases\n   * (such as when a 'Cancel' button is required on the screen.\n   *\n   * @param instance The instance to cancel editing.\n   * @returns A promise that resolves when editing is cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a form screen, which is generally a shared create/edit screen. */\nexport abstract class FormDescriber extends ScreenDescriber {\n  /** Initialize form state from this form describer. */\n  state(): FormState {\n    let save = this.save.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      errors: {},\n\n      /** The wrapped save functionality. */\n      async save(instance: T, options?: any): Promise {\n        return save(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Saves a model instance using whatever backend required\n   * by the user of this library. This will be automatically be provided\n   * to the form state when it is constructed.\n   *\n   * This must be provided by a child class.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to save.\n   * @param options Any extra options provided.\n   * @returns A promise that resolves when the instance has been saved.\n   */\n  async abstract save(state: FormState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancel saving a model instance. By default this does nothing.\n   * If you need the screen to have a cancel button, override\n   * this function in a child class. This will automatically be provided\n   * to the form state when it is constructed.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to cancel saving.\n   * @param options Any extra options provided.\n   */\n  async cancel(_state: FormState, _instance: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a form describer. */\nexport interface DefaultFormOptions {\n  /** The save function to provide to the default describer. */\n  save(state: FormState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: FormState, instance: T): Promise;\n}\n\n/** A form describer for a model which uses default behaviour. */\nexport class DefaultFormDescriber extends FormDescriber {\n  /** The options for the default describer. */\n  options: DefaultFormOptions;\n\n  /**\n   * Constructs the default form describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default form options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultFormOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Saves the form data using the save function provided as an option. */\n  async save(state: FormState, instance: T, options?: any): Promise {\n    return this.options.save(state, instance, options);\n  }\n\n  /** Cancels saving the form using the cancel function provided as an option. */\n  async cancel(state: FormState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default form describers from ModelSafe models.\n * The form describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoFormDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultFormOptions): DefaultFormDescriber {\n    return new DefaultFormDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/ListDescriber.html":{"url":"/classes/ListDescriber.html","title":"class - ListDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ListDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                Describes a list screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state for the list screen described by this class. \n            \n                                        \n                                            Returns:     ListState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     refresh\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    refresh(state: ListState)\n                                \n                            \n            \n                            \n                                \n                                        Refreshes the list data using a list state.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                state\n                                                            \n                                                            \n                                                                The list state.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves with the new list data.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/ReadDescriber.html":{"url":"/classes/ReadDescriber.html","title":"class - ReadDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ReadDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/read.ts\n        \n\n            \n                Description\n            \n            \n                Describes a read screen. \n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Initializes the state for a read screen. \n            \n                                        \n                                            Returns:     ReadState\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a read (view) screen. */\n// tslint:disable-next-line:no-empty-interface\nexport interface ReadState extends ScreenState {}\n\n/** Describes a read screen. */\nexport abstract class ReadDescriber extends ScreenDescriber {\n  /** Initializes the state for a read screen. */\n  state(): ReadState {\n    return super.state();\n  }\n}\n\n/** A read describer for a model without any custom behaviour. */\nexport class DefaultReadDescriber extends ReadDescriber {}\n\n/**\n * Generates default read describers from ModelSafe models.\n * The read describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoReadDescriber {\n  /** Automatically generates a read describer for a model. */\n  describe(model: ModelConstructor): DefaultReadDescriber {\n    return new DefaultReadDescriber(model);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/classes/ScreenDescriber.html":{"url":"/classes/ScreenDescriber.html","title":"class - ScreenDescriber","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ScreenDescriber\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/base.ts\n        \n\n            \n                Description\n            \n            \n                The base screen describer class.\nA screen describer provides all of the descriptionsof how a screen look and function. The screendescriber generates this directly off a ModelSafemodel by default (but the descriptions can be overriddento come from a static/hard-coded source if you don't wantto use ModelSafe for a specific screen). The describeris then used to generate a screen state, which actuallyspecifies what should be displayed and allowsfor interactions with the screen.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(model: ModelConstructor)\n                                \n                            \n            \n                            \n                                \n                                        Construct a screen describer. \n            \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     state\n                                \n                            \n            \n                            \n                                \n            state()\n                                \n                            \n            \n                            \n                                \n                                        Instantiates a state from the screen described by this class. \n            \n                                        \n                                            Returns:     ScreenState\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getScreen\n                                \n                            \n            \n                            \n                                \n            getScreen()\n                                \n                            \n            \n                            \n                                \n                                        Get the misc. screen description. \n            \n                                        \n                                            Returns:     ScreenDescription\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAttributes\n                                \n                            \n            \n                            \n                                \n            getAttributes()\n                                \n                            \n            \n                            \n                                \n                                        Get the attributes for this screen, which by default come from the model. \n            \n                                        \n                                            Returns:     AttributeDescriptions\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAssociations\n                                \n                            \n            \n                            \n                                \n            getAssociations()\n                                \n                            \n            \n                            \n                                \n                                        Get the associations for this screen, which by default come from the model. \n            \n                                        \n                                            Returns:     AssociationDescriptions\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getActions\n                                \n                            \n            \n                            \n                                \n            getActions()\n                                \n                            \n            \n                            \n                                \n                                        Get the actions for this screen. \n            \n                                        \n                                            Returns:     ActionDescription[]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getContextualActions\n                                \n                            \n            \n                            \n                                \n            getContextualActions()\n                                \n                            \n            \n                            \n                                \n                                        Get the contextual actions for this screen. \n            \n                                        \n                                            Returns:     ContextualActionDescription[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Protected model\n                                \n                            \n                            \n                                \n                                    model:     ModelConstructor\n            \n                                \n                            \n                            \n                                \n                                    The ModelSafe model this screen is for. \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import * as _ from 'lodash';\nimport { singularize, pluralize } from 'inflection';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Model, ModelConstructor, AttributeType, AssociationType, getModelOptions,\n         getAttributes, getAssociations, InternalAttributeType, EnumAttributeTypeOptions } from 'modelsafe';\n\nimport { getPropertyOptions } from './metadata';\n\n/** Describes a possible value for a property.  */\nexport interface PropertyValueDescription {\n  /** The label of the property value. */\n  label: string;\n\n  /** The value to set the relevant property to if this value is selected. */\n  value: any;\n}\n\n/** Describes a property of a model. This could be an association or attribute. */\nexport interface PropertyDescription {\n  /** The path to the property on the model. */\n  path: string;\n\n  /** The label of the property. */\n  label: string;\n\n  /** Whether the property is sortable. */\n  sortable: boolean;\n\n  /** Whether the property is filterable. */\n  filterable: boolean;\n\n  /** Whether the property is visible by default. */\n  visible: boolean;\n\n  /** Any extra data the property has. */\n  data?: any;\n\n  /** Whether the property is read-only. */\n  readOnly: boolean;\n\n  /** The ordering of the property. Negative numbers come first when sorting the properties. */\n  order: number;\n\n  /** The possible values of a property. */\n  values: PropertyValueDescription[] | Observable | Promise;\n}\n\n/** Describes an attribute of a model. */\nexport interface AttributeDescription extends PropertyDescription {\n  /** The type of the attribute. */\n  type: AttributeType;\n}\n\n/** All attribute descriptions of a model, mapped by path. */\nexport interface AttributeDescriptions {\n  [key: string]: AttributeDescription;\n}\n\n/** Describes an association of a model. */\nexport interface AssociationDescription extends PropertyDescription {\n  /** The type of the association. */\n  type: AssociationType;\n}\n\n/** All association descriptions of a model, mapped by path. */\nexport interface AssociationDescriptions {\n  [key: string]: AssociationDescription;\n}\n\n/** The general description of a screen. This is for miscellaneous description settings. */\nexport interface ScreenDescription {\n  /** The pluralized camel-case form of the model name. */\n  plural: string;\n\n  /** The singularized camel-case form of the model name. */\n  singular: string;\n\n  /**\n   * The paths of visible properties. By default this will be the list of attributes/associations\n   * on the model that have been marked as visible.\n   */\n  visible: string[];\n}\n\n/**\n * Describes an action that can be performed on the screen that is not related\n * to a specific model instance, e.g. a 'Create New' button which might take you to a page.\n */\nexport interface ActionDescription {\n  /** The label of the action. */\n  label: string;\n\n  /** Any extra data for the action. */\n  data?: any;\n\n  /**\n   * Performs the action itself.\n   *\n   * @param state The screen state to action with.\n   * @param options Any extra options for the action.\n   * @returns A promise resolving with the action result.\n   */\n  do(this: ActionState, state: ScreenState, options?: any): Promise;\n}\n\n/**\n * Describe san action that can be performed on a specific model instance, for e.g.\n * a 'Delete' button that deletes a specific model instance/row.\n */\nexport interface ContextualActionDescription extends ActionDescription {\n  /**\n   * Performs the contextual action itself.\n   *\n   * @param state The screen state to action with.\n   * @param instance The model instance to perform the action on.\n   * @param options Any extra options for the action.\n   * @returns A promise that resolves with the action result.\n   */\n  do(this: ContextualActionState, state: ScreenState, instance: T, options?: any): Promise;\n}\n\n/** The state of a property to display on the screen. */\n// tslint:disable-next-line:no-empty-interface\nexport interface PropertyState extends PropertyDescription {}\n\n/** The state of an action on the screen. */\nexport interface ActionState extends ActionDescription {\n  /** Whether the action is being performed. */\n  isPerforming: boolean;\n}\n\nexport interface ContextualActionState extends ContextualActionDescription {\n  /** Whether the action is beign performed. */\n  isPerforming: boolean;\n}\n\n/** The start of an alert message on the screen. */\nexport interface AlertState {\n  /**\n   * The ID of the alert. If this alert state is pushed with unique mode on,\n   * only one alert with the same ID can exist at once.\n   */\n  id: string;\n\n  /** The message of the alert. This might be HTML or plain-text depending on your implementation. */\n  message: string;\n\n  /** Any extra data for the alert. */\n  data?: any;\n}\n\n/** The state of the screen. This is shared across all action specific states. */\nexport interface ScreenState extends ScreenDescription {\n  /** The alerts on the screen. */\n  alerts: AlertState[];\n\n  /** The properties to display on the screen. */\n  props: Observable;\n\n  /** The properties subject that emits the observable `props` attribute. */\n  propsSubject: BehaviorSubject;\n\n  /** The actions on the screen. */\n  actions: ActionState[];\n\n  /** The contextual actions (instance-acting) on the screen. */\n  contextualActions: ContextualActionState[];\n\n  /**\n   * Set the properties that are visible on the screen.\n   * This will automatically re-emit the properties list (`props`)\n   * with the new list of visible properties with their relative ordering.\n   *\n   * @param paths The list of property paths that should be visible.\n   */\n  setVisible(paths: string[]): void;\n\n  /**\n   * Adds an alert to the screen.\n   * This alert will override any alerts with the same ID.\n   *\n   * @param alert The alert to add.\n   */\n  addAlert(alert: AlertState): void;\n\n  /**\n   * Removes an alert from the screen.\n   * This alert will remove all alerts with the provided alert's ID.\n   *\n   * @param alert The alert to remove.\n   */\n  removeAlert(alert: AlertState): void;\n}\n\n/**\n * The base screen describer class.\n *\n * A screen describer provides all of the descriptions\n * of how a screen look and function. The screen\n * describer generates this directly off a ModelSafe\n * model by default (but the descriptions can be overridden\n * to come from a static/hard-coded source if you don't want\n * to use ModelSafe for a specific screen). The describer\n * is then used to generate a screen state, which actually\n * specifies what should be displayed and allows\n * for interactions with the screen.\n */\nexport abstract class ScreenDescriber {\n  /** The ModelSafe model this screen is for. */\n  protected model: ModelConstructor;\n\n  /** Construct a screen describer. */\n  constructor(model: ModelConstructor) {\n    this.model = model;\n  }\n\n  /** Instantiates a state from the screen described by this class. */\n  state(): ScreenState {\n    let screen = this.getScreen();\n    let visible = screen.visible;\n    let descriptions = _\n        .values(this.getAttributes())\n        .concat(_.values(this.getAssociations()));\n\n    let refreshProps = (visible: string[]) => {\n      return descriptions\n        .filter(desc => visible.indexOf(desc.path) !== -1)\n        .sort((a, b) => {\n          return (typeof (a.order) === 'number' ? a.order : 0) - (typeof (b.order) === 'number' ? b.order : 0);\n        });\n    };\n\n    let propsSubject = new BehaviorSubject(refreshProps(visible));\n\n    return _.clone({\n      alerts: [],\n      plural: screen.plural,\n      singular: screen.singular,\n      visible: screen.visible,\n      props: propsSubject.asObservable(),\n      propsSubject,\n\n      actions: this.getActions().map((action: ActionDescription): ActionState => {\n        let state = _.clone(action);\n\n        state.do = state.do.bind(state);\n\n        return state as ActionState;\n      }),\n\n      contextualActions: this.getContextualActions().map((action: ContextualActionDescription): ContextualActionState => {\n        let state = _.clone(action);\n\n        state.do = state.do.bind(state);\n\n        return state as ContextualActionState;\n      }),\n\n      /** Set the properties that are visible. */\n      setVisible(paths: string[]) {\n        this.visible = paths;\n\n        this.propsSubject.next(refreshProps(paths));\n      },\n\n      /** Adds an alert to the screen. */\n      addAlert(alert: AlertState) {\n        this.alerts = this.alerts\n          .filter((item: AlertState) => item.id !== alert.id)\n          .concat([alert]);\n      },\n\n      /** Removes an alert from the screen. */\n      removeAlert(alert: AlertState) {\n        this.alerts = this.alerts.filter((item: AlertState) => item.id !== alert.id);\n      }\n    });\n  }\n\n  /** Get the misc. screen description. */\n  getScreen(): ScreenDescription {\n    let name = getModelOptions(this.model).name;\n    let descriptions = _\n      .values(this.getAttributes())\n      .concat(_.values(this.getAssociations()));\n\n    return {\n      plural: pluralize(_.camelCase(name)),\n      singular: singularize(_.camelCase(name)),\n      visible: descriptions\n        .filter(desc => desc.visible)\n        .map(desc => desc.path)\n    };\n  }\n\n  /** Get the attributes for this screen, which by default come from the model. */\n  getAttributes(): AttributeDescriptions {\n    let attrs = getAttributes(this.model);\n    let mappedAttrs = {};\n\n    for (let key of Object.keys(attrs)) {\n      let attr = attrs[key];\n      let propOptions = getPropertyOptions(this.model, key);\n      let attrOptions = {\n        path: key,\n        type: attr.type,\n        readOnly: attr.readOnly,\n\n        ... propOptions\n      };\n\n      // Check if the internal attribute type is ENUM, if so pre-populate values with relevant enum variants\n      // (if no values have been provided manually).\n      if (!_.isArray(attrOptions.values) && attr.type.type === InternalAttributeType.ENUM) {\n        attrOptions.values = (attr.type.options as EnumAttributeTypeOptions).values.map((v: any) => {\n          return {\n            label: v,\n            value: v\n          };\n        });\n      }\n\n      mappedAttrs[key] = attrOptions;\n    }\n\n    return mappedAttrs;\n  }\n\n  /** Get the associations for this screen, which by default come from the model. */\n  getAssociations(): AssociationDescriptions {\n    let assocs = getAssociations(this.model);\n    let mappedAssocs = {};\n\n    for (let key of Object.keys(assocs)) {\n      let assoc = assocs[key];\n      let propOptions = getPropertyOptions(this.model, key);\n      let assocOptions = {\n        path: key,\n        type: assoc.type,\n        readOnly: assoc.readOnly,\n\n        ... propOptions\n      };\n\n      mappedAssocs[key] = assocOptions;\n    }\n\n    return mappedAssocs;\n  }\n\n  /** Get the actions for this screen. */\n  getActions(): ActionDescription[] {\n    return [];\n  }\n\n  /** Get the contextual actions for this screen. */\n  getContextualActions(): ContextualActionDescription[] {\n    return [];\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/DefaultDeleteOptions.html":{"url":"/interfaces/DefaultDeleteOptions.html","title":"interface - DefaultDeleteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultDeleteOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/delete.ts\n        \n\n            \n                Description\n            \n            \n                The options for the default implementation of a delete describer. \n\n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n            delete(state: DeleteState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        The delete function to provide to the default describer. \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n            cancel(state: DeleteState, instance: T)\n                                \n                            \n            \n                            \n                                \n                                        The cancel function to provide to the default describer. \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a delete screen. */\nexport interface DeleteState extends ScreenState {\n  /**\n   * Deletes a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  delete(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a delete screen. */\nexport abstract class DeleteDescriber extends ScreenDescriber {\n  /** Initializes the state of a delete screen from the describer. */\n  state(): DeleteState {\n    let del = this.delete.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      /** The wrapped delete functionality. */\n      async delete(instance: T, options?: any): Promise {\n        return del(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Deletes a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  async abstract delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  async cancel(_state: DeleteState, _instance_: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a delete describer. */\nexport interface DefaultDeleteOptions {\n  /** The delete function to provide to the default describer. */\n  delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: DeleteState, instance: T): Promise;\n}\n\n/** A delete describer for a model which uses default behaviour. */\nexport class DefaultDeleteDescriber extends DeleteDescriber {\n  /** The options for the default describer. */\n  options: DefaultDeleteOptions;\n\n  /**\n   * Constructs the default delete describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default delete options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultDeleteOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Deletes the instance using the delete function provided as an option. */\n  async delete(state: DeleteState, instance: T, options?: any): Promise {\n    return this.options.delete(state, instance, options);\n  }\n\n  /** Cancels deleting the instance using the cancel function provided as an option. */\n  async cancel(state: DeleteState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default delete describers from ModelSafe models.\n * The delete describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoDeleteDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultDeleteOptions): DefaultDeleteDescriber {\n    return new DefaultDeleteDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/DefaultFormOptions.html":{"url":"/interfaces/DefaultFormOptions.html","title":"interface - DefaultFormOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultFormOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/form.ts\n        \n\n            \n                Description\n            \n            \n                The options for the default implementation of a form describer. \n\n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     save\n                                \n                            \n            \n                            \n                                \n            save(state: FormState, instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        The save function to provide to the default describer. \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n            cancel(state: FormState, instance: T)\n                                \n                            \n            \n                            \n                                \n                                        The cancel function to provide to the default describer. \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor, ModelErrors } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state for a form screen. */\nexport interface FormState extends ScreenState {\n  errors: ModelErrors;\n\n  /**\n   * Saves an instance the resolves with the updated instance using the\n   * function provided by the describer.\n   *\n   * @param instance The instance to save.\n   * @param options Any options to provide.\n   * @returns A promise that resolves with the updated instance.\n   */\n  save(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels editing/creating an instance using the function provided\n   * by the describer. This is optional and might be required in some cases\n   * (such as when a 'Cancel' button is required on the screen.\n   *\n   * @param instance The instance to cancel editing.\n   * @returns A promise that resolves when editing is cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a form screen, which is generally a shared create/edit screen. */\nexport abstract class FormDescriber extends ScreenDescriber {\n  /** Initialize form state from this form describer. */\n  state(): FormState {\n    let save = this.save.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      errors: {},\n\n      /** The wrapped save functionality. */\n      async save(instance: T, options?: any): Promise {\n        return save(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Saves a model instance using whatever backend required\n   * by the user of this library. This will be automatically be provided\n   * to the form state when it is constructed.\n   *\n   * This must be provided by a child class.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to save.\n   * @param options Any extra options provided.\n   * @returns A promise that resolves when the instance has been saved.\n   */\n  async abstract save(state: FormState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancel saving a model instance. By default this does nothing.\n   * If you need the screen to have a cancel button, override\n   * this function in a child class. This will automatically be provided\n   * to the form state when it is constructed.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to cancel saving.\n   * @param options Any extra options provided.\n   */\n  async cancel(_state: FormState, _instance: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a form describer. */\nexport interface DefaultFormOptions {\n  /** The save function to provide to the default describer. */\n  save(state: FormState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: FormState, instance: T): Promise;\n}\n\n/** A form describer for a model which uses default behaviour. */\nexport class DefaultFormDescriber extends FormDescriber {\n  /** The options for the default describer. */\n  options: DefaultFormOptions;\n\n  /**\n   * Constructs the default form describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default form options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultFormOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Saves the form data using the save function provided as an option. */\n  async save(state: FormState, instance: T, options?: any): Promise {\n    return this.options.save(state, instance, options);\n  }\n\n  /** Cancels saving the form using the cancel function provided as an option. */\n  async cancel(state: FormState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default form describers from ModelSafe models.\n * The form describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoFormDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultFormOptions): DefaultFormDescriber {\n    return new DefaultFormDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/DefaultListOptions.html":{"url":"/interfaces/DefaultListOptions.html","title":"interface - DefaultListOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultListOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                The options for the default implementation of a list describer. \n\n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     refresh\n                                \n                            \n            \n                            \n                                \n            refresh(state: ListState)\n                                \n                            \n            \n                            \n                                \n                                        The refresh function to provide to the list state. \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/DeleteState.html":{"url":"/interfaces/DeleteState.html","title":"interface - DeleteState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/delete.ts\n        \n\n            \n                Description\n            \n            \n                The state of a delete screen. \n\n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n            delete(instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Deletes a model instance using the function provided by the describer.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to delete.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any extra options to provide.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the instance has been deleted.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n            cancel(instance: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancels deleting a model instance using the function provided by the describer.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to cancel deleting for.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when the delete has been cancelled.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a delete screen. */\nexport interface DeleteState extends ScreenState {\n  /**\n   * Deletes a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  delete(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance using the function provided by the describer.\n   *\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a delete screen. */\nexport abstract class DeleteDescriber extends ScreenDescriber {\n  /** Initializes the state of a delete screen from the describer. */\n  state(): DeleteState {\n    let del = this.delete.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      /** The wrapped delete functionality. */\n      async delete(instance: T, options?: any): Promise {\n        return del(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Deletes a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to delete.\n   * @param options Any extra options to provide.\n   * @returns A promise that resolves when the instance has been deleted.\n   */\n  async abstract delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancels deleting a model instance.\n   *\n   * @param state The current delete screen state.\n   * @param instance The instance to cancel deleting for.\n   * @returns A promise that resolves when the delete has been cancelled.\n   */\n  async cancel(_state: DeleteState, _instance_: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a delete describer. */\nexport interface DefaultDeleteOptions {\n  /** The delete function to provide to the default describer. */\n  delete(state: DeleteState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: DeleteState, instance: T): Promise;\n}\n\n/** A delete describer for a model which uses default behaviour. */\nexport class DefaultDeleteDescriber extends DeleteDescriber {\n  /** The options for the default describer. */\n  options: DefaultDeleteOptions;\n\n  /**\n   * Constructs the default delete describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default delete options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultDeleteOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Deletes the instance using the delete function provided as an option. */\n  async delete(state: DeleteState, instance: T, options?: any): Promise {\n    return this.options.delete(state, instance, options);\n  }\n\n  /** Cancels deleting the instance using the cancel function provided as an option. */\n  async cancel(state: DeleteState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default delete describers from ModelSafe models.\n * The delete describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoDeleteDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultDeleteOptions): DefaultDeleteDescriber {\n    return new DefaultDeleteDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/FilterState.html":{"url":"/interfaces/FilterState.html","title":"interface - FilterState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  FilterState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                The state of filtering a property on a list. \n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        operator\n                                    \n                                \n                                \n                                    \n                                        operator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The operator being used to filter by.This can be any arbitrary string andit's up to the user of this library to figureout how to filter by this operator.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The property path being filtered on. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The value being filtered by. \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/FormState.html":{"url":"/interfaces/FormState.html","title":"interface - FormState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  FormState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/form.ts\n        \n\n            \n                Description\n            \n            \n                The state for a form screen. \n\n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     save\n                                \n                            \n            \n                            \n                                \n            save(instance: T, options: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves an instance the resolves with the updated instance using thefunction provided by the describer.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to save.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Any options to provide.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves with the updated instance.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cancel\n                                \n                            \n            \n                            \n                                \n            cancel(instance: T)\n                                \n                            \n            \n                            \n                                \n                                        Cancels editing/creating an instance using the function providedby the describer. This is optional and might be required in some cases(such as when a 'Cancel' button is required on the screen.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                instance\n                                                            \n                                                            \n                                                                The instance to cancel editing.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                A promise that resolves when editing is cancelled.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     ModelErrors\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModelErrors\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor, ModelErrors } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state for a form screen. */\nexport interface FormState extends ScreenState {\n  errors: ModelErrors;\n\n  /**\n   * Saves an instance the resolves with the updated instance using the\n   * function provided by the describer.\n   *\n   * @param instance The instance to save.\n   * @param options Any options to provide.\n   * @returns A promise that resolves with the updated instance.\n   */\n  save(instance: T, options?: any): Promise;\n\n  /**\n   * Cancels editing/creating an instance using the function provided\n   * by the describer. This is optional and might be required in some cases\n   * (such as when a 'Cancel' button is required on the screen.\n   *\n   * @param instance The instance to cancel editing.\n   * @returns A promise that resolves when editing is cancelled.\n   */\n  cancel(instance: T): Promise;\n}\n\n/** Describes a form screen, which is generally a shared create/edit screen. */\nexport abstract class FormDescriber extends ScreenDescriber {\n  /** Initialize form state from this form describer. */\n  state(): FormState {\n    let save = this.save.bind(this);\n    let cancel = this.cancel.bind(this);\n\n    return {\n      ... super.state(),\n\n      errors: {},\n\n      /** The wrapped save functionality. */\n      async save(instance: T, options?: any): Promise {\n        return save(this, instance, options);\n      },\n\n      /** The wrapped cancel functionality. */\n      async cancel(instance: T): Promise {\n        return cancel(this, instance);\n      }\n    };\n  }\n\n  /**\n   * Saves a model instance using whatever backend required\n   * by the user of this library. This will be automatically be provided\n   * to the form state when it is constructed.\n   *\n   * This must be provided by a child class.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to save.\n   * @param options Any extra options provided.\n   * @returns A promise that resolves when the instance has been saved.\n   */\n  async abstract save(state: FormState, instance: T, options?: any): Promise;\n\n  /**\n   * Cancel saving a model instance. By default this does nothing.\n   * If you need the screen to have a cancel button, override\n   * this function in a child class. This will automatically be provided\n   * to the form state when it is constructed.\n   *\n   * @param state The current form screen state.\n   * @param instance The model instance to cancel saving.\n   * @param options Any extra options provided.\n   */\n  async cancel(_state: FormState, _instance: T): Promise {\n    // Do nothing.\n  }\n}\n\n/** The options for the default implementation of a form describer. */\nexport interface DefaultFormOptions {\n  /** The save function to provide to the default describer. */\n  save(state: FormState, instance: T, options?: any): Promise;\n\n  /** The cancel function to provide to the default describer. */\n  cancel?(state: FormState, instance: T): Promise;\n}\n\n/** A form describer for a model which uses default behaviour. */\nexport class DefaultFormDescriber extends FormDescriber {\n  /** The options for the default describer. */\n  options: DefaultFormOptions;\n\n  /**\n   * Constructs the default form describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default form options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultFormOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Saves the form data using the save function provided as an option. */\n  async save(state: FormState, instance: T, options?: any): Promise {\n    return this.options.save(state, instance, options);\n  }\n\n  /** Cancels saving the form using the cancel function provided as an option. */\n  async cancel(state: FormState, instance: T): Promise {\n    if (typeof (this.options.cancel) === 'function') {\n      return this.options.cancel(state, instance);\n    }\n  }\n}\n\n/**\n * Generates default form describers from ModelSafe models.\n * The form describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoFormDescriber {\n  /** Automatically generates a form describer for a model. */\n  describe(model: ModelConstructor, options: DefaultFormOptions): DefaultFormDescriber {\n    return new DefaultFormDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/ListMode.html":{"url":"/interfaces/ListMode.html","title":"interface - ListMode","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ListMode\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                A view mode for the list. \n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The data of the view mode. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The ID of the view mode.This is what is actually stored on the list state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The label of the view mode. \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/ListState.html":{"url":"/interfaces/ListState.html","title":"interface - ListState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ListState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                The state for a list screen. \n\n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     refresh\n                                \n                            \n            \n                            \n                                \n            refresh()\n                                \n                            \n            \n                            \n                                \n                                        Refreshes the list data on the screen using the latest list state.This function should be provided by the describer.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                The promise that resolves with the refreshed data.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearSorting\n                                \n                            \n            \n                            \n                                \n            clearSorting(refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Clear the sorting of the list.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearFiltering\n                                \n                            \n            \n                            \n                                \n            clearFiltering(refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Clear the filtering of the list.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sort\n                                \n                            \n            \n                            \n                                \n            sort(prop: PropertyState, order: SortOrder, refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Sort by a property with a specific order.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                prop\n                                                            \n                                                            \n                                                                The property to sort.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                order\n                                                            \n                                                            \n                                                                The sort order. Defaults to ascending.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addFilter\n                                \n                            \n            \n                            \n                                \n            addFilter(prop: PropertyState, filter: Partial, refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Add a filter to the list.This will automatically refresh the list, unless asked not to.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                prop\n                                                            \n                                                            \n                                                                The property to filter by.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                filter\n                                                            \n                                                            \n                                                                The additional filter state to use, without the property. This should contain the operator and value.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeFilter\n                                \n                            \n            \n                            \n                                \n            removeFilter(filter: FilterState, refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Remove a filter from the list.This will automatically refresh the list, unless asked not to.\n            Note that this will remove blanketly by a shallow equal.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                filter\n                                                            \n                                                            \n                                                                The filter state to stop filtering.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasPaging\n                                \n                            \n            \n                            \n                                \n            hasPaging()\n                                \n                            \n            \n                            \n                                \n                                        Whether or not pagination information has been provided.\n            \n                                        \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                Whether pagination is enabled.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setPage\n                                \n                            \n            \n                            \n                                \n            setPage(page: number, refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Move to a specific page page.This will do nothing if paging information has not been provided.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                page\n                                                            \n                                                            \n                                                                The page number to navigate to. This starts from 1.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setItemsPerPage\n                                \n                            \n            \n                            \n                                \n            setItemsPerPage(itemsPerPage: number, refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Sets the number of items to display per page.This will do nothing if paging information has not been provided.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                itemsPerPage\n                                                            \n                                                            \n                                                                The number of items to display on a page. Must be at least 1.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setMode\n                                \n                            \n            \n                            \n                                \n            setMode(mode: ListMode, refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Set the current view mode of the list.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                mode\n                                                            \n                                                            \n                                                                The view mode ID. This should correspond to a modeID on the list definition.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     firstPage\n                                \n                            \n            \n                            \n                                \n            firstPage(refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Move to the first page.This will do nothing if paging information has not been provided.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     lastPage\n                                \n                            \n            \n                            \n                                \n            lastPage(refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Move to the last page.This will do nothing if paging information has not been provided.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     nextPage\n                                \n                            \n            \n                            \n                                \n            nextPage(refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Move to the next page.This will do nothing if paging information has not been provided.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     previousPage\n                                \n                            \n            \n                            \n                                \n            previousPage(refresh: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Move to the previous page.This will do nothing if paging information has not been provided.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                refresh\n                                                            \n                                                            \n                                                                Whether or not to refresh the list after. Defaults to true.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     FilterState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterState[]\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The filter state of the list. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The current list view mode. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        paging\n                                    \n                                \n                                \n                                    \n                                        paging:     PagingState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PagingState\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The pagination state of the list. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        refreshes\n                                    \n                                \n                                \n                                    \n                                        refreshes:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    Emits events when the screen is refreshed. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sorting\n                                    \n                                \n                                \n                                    \n                                        sorting:     SortState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SortState[]\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The sorting state of the list. \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/PagingState.html":{"url":"/interfaces/PagingState.html","title":"interface - PagingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  PagingState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                The state of a list's pagination. \n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        itemsPerPage\n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The items per page. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        numItems\n                                    \n                                \n                                \n                                    \n                                        numItems:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The number of items. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        numPages\n                                    \n                                \n                                \n                                    \n                                        numPages:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The number of pages. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The current page being viewed. This is not zero-indexed (i.e. it starts from 1). \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/ReadState.html":{"url":"/interfaces/ReadState.html","title":"interface - ReadState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ReadState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/read.ts\n        \n\n            \n                Description\n            \n            \n                The state of a read (view) screen. \n\n            \n\n\n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\n\nimport { ScreenState, ScreenDescriber } from './base';\n\n/** The state of a read (view) screen. */\n// tslint:disable-next-line:no-empty-interface\nexport interface ReadState extends ScreenState {}\n\n/** Describes a read screen. */\nexport abstract class ReadDescriber extends ScreenDescriber {\n  /** Initializes the state for a read screen. */\n  state(): ReadState {\n    return super.state();\n  }\n}\n\n/** A read describer for a model without any custom behaviour. */\nexport class DefaultReadDescriber extends ReadDescriber {}\n\n/**\n * Generates default read describers from ModelSafe models.\n * The read describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoReadDescriber {\n  /** Automatically generates a read describer for a model. */\n  describe(model: ModelConstructor): DefaultReadDescriber {\n    return new DefaultReadDescriber(model);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/SortState.html":{"url":"/interfaces/SortState.html","title":"interface - SortState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SortState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/list.ts\n        \n\n            \n                Description\n            \n            \n                The state of sorting a property on a list. \n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     SortOrder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SortOrder\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The sort order. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The property that is being sorted. \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Model, ModelConstructor } from 'modelsafe';\nimport * as _ from 'lodash';\n\nimport { ScreenState, ScreenDescriber, PropertyState } from './base';\n\n/** The order that a property can be sorted by. */\nexport enum SortOrder {\n  ASC,\n  DESC\n}\n\n/** An ascending sort. */\nexport const ASC = SortOrder.ASC;\n\n/** A descending sort. */\nexport const DESC = SortOrder.DESC;\n\n/** A view mode for the list. */\nexport interface ListMode {\n  /**\n   * The ID of the view mode.\n   * This is what is actually stored on the list state.\n   */\n  id: string;\n\n  /** The data of the view mode. */\n  data?: any;\n\n  /** The label of the view mode. */\n  label: string;\n}\n\n/** The state of sorting a property on a list. */\nexport interface SortState {\n  /** The property that is being sorted. */\n  path: string;\n\n  /** The sort order. */\n  order: SortOrder;\n}\n\n/** The state of filtering a property on a list. */\nexport interface FilterState {\n  /** The property path being filtered on. */\n  path: string;\n\n  /**\n   * The operator being used to filter by.\n   * This can be any arbitrary string and\n   * it's up to the user of this library to figure\n   * out how to filter by this operator.\n   */\n  operator: string;\n\n  /** The value being filtered by. */\n  value: any;\n}\n\n/** The state of a list's pagination. */\nexport interface PagingState {\n  /** The current page being viewed. This is not zero-indexed (i.e. it starts from 1). */\n  page: number;\n\n  /** The number of pages. */\n  numPages: number;\n\n  /** The number of items. */\n  numItems: number;\n\n  /** The items per page. */\n  itemsPerPage: number;\n}\n\n/** The state for a list screen. */\nexport interface ListState extends ScreenState {\n  /** The filter state of the list. */\n  filters: FilterState[];\n\n  /** The sorting state of the list. */\n  sorting: SortState[];\n\n  /** The pagination state of the list. */\n  paging?: PagingState;\n\n  /** The current list view mode. */\n  mode?: string;\n\n  /** Emits events when the screen is refreshed. */\n  refreshes: EventEmitter;\n\n  /**\n   * Refreshes the list data on the screen using the latest list state.\n   * This function should be provided by the describer.\n   *\n   * @returns The promise that resolves with the refreshed data.\n   */\n  refresh(): Promise;\n\n  /**\n   * Clear the sorting of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearSorting(refresh?: boolean): void;\n\n  /**\n   * Clear the filtering of the list.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  clearFiltering(refresh?: boolean): void;\n\n  /**\n   * Sort by a property with a specific order.\n   *\n   * @param prop The property to sort.\n   * @param order The sort order. Defaults to ascending.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  sort(prop: PropertyState, order?: SortOrder, refresh?: boolean): void;\n\n  /**\n   * Add a filter to the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * @param prop The property to filter by.\n   * @param filter The additional filter state to use, without the property. This should contain the operator and value.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  addFilter(prop: PropertyState, filter: Partial, refresh?: boolean): void;\n\n  /**\n   * Remove a filter from the list.\n   * This will automatically refresh the list, unless asked not to.\n   *\n   * Note that this will remove blanketly by a shallow equal.\n   *\n   * @param filter The filter state to stop filtering.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  removeFilter(filter: FilterState, refresh?: boolean): void;\n\n  /**\n   * Whether or not pagination information has been provided.\n   *\n   * @returns Whether pagination is enabled.\n   */\n  hasPaging(): boolean;\n\n  /**\n   * Move to a specific page page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param page The page number to navigate to. This starts from 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setPage(page: number, refresh?: boolean): void;\n\n  /**\n   * Sets the number of items to display per page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param itemsPerPage The number of items to display on a page. Must be at least 1.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setItemsPerPage(itemsPerPage: number, refresh?: boolean): void;\n\n  /**\n   * Set the current view mode of the list.\n   *\n   * @param mode The view mode ID. This should correspond to a mode\n   *             ID on the list definition.\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  setMode(mode: ListMode, refresh?: boolean): void;\n\n  /**\n   * Move to the first page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  firstPage(refresh?: boolean): void;\n\n  /**\n   * Move to the last page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  lastPage(refresh?: boolean): void;\n\n  /**\n   * Move to the next page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  nextPage(refresh?: boolean): void;\n\n  /**\n   * Move to the previous page.\n   * This will do nothing if paging information has not been provided.\n   *\n   * @param refresh Whether or not to refresh the list after. Defaults to true.\n   */\n  previousPage(refresh?: boolean): void;\n}\n\n/** Describes a list screen. */\nexport abstract class ListDescriber extends ScreenDescriber {\n  /** Initializes the state for the list screen described by this class. */\n  state(): ListState {\n    let refresh = this.refresh.bind(this);\n\n    // FIXME: The any cast here is required to temporarily get around not having a\n    // refresh function on the list state at first.\n    let state: ListState = {\n      ... super.state(),\n\n      filters: [],\n      sorting: [],\n      refreshes: new EventEmitter(),\n\n      /** Clear the sorting of the list. */\n      clearSorting(refresh: boolean = true) {\n        this.sorting = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Clear the filtering of the list. */\n      clearFiltering(refresh: boolean = true) {\n        this.filters = [];\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sort by a specific property with a specific order. */\n      sort(prop: PropertyState, order?: SortOrder, refresh: boolean = true) {\n        let sorting = _.filter(this.sorting, (sorted: SortState) => {\n          return sorted.path !== prop.path;\n        });\n\n        if (!order) {\n          order = SortOrder.ASC;\n        }\n\n        this.sorting = sorting.concat([{ path: prop.path, order }]);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Add a filter to the list. */\n      addFilter(prop: PropertyState, filter: Partial, refresh: boolean = true) {\n        this.filters.push({ path: prop.path, ... filter as FilterState });\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Remove a filter from the list. */\n      removeFilter(filter: FilterState, refresh: boolean = true) {\n        this.filters = _.without(this.filters, filter);\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Whether or not pagination information has been provided. */\n      hasPaging(): boolean {\n        return this.paging && typeof (this.paging) === 'object';\n      },\n\n      /** Move to a specific page page. */\n      setPage(page: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.page = Math.max(Math.min(page, paging.numPages), 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Sets the number of items to display per page. */\n      setItemsPerPage(itemsPerPage: number, refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          paging.itemsPerPage = Math.max(itemsPerPage, 1);\n        }\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Set the current view mode of the list. */\n      setMode(mode: ListMode, refresh: boolean = true) {\n        this.mode = mode.id;\n\n        if (refresh) {\n          this.refresh();\n        }\n      },\n\n      /** Move to the first page. */\n      firstPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          this.setPage(1, refresh);\n        }\n      },\n\n      /** Move to the last page. */\n      lastPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.numPages, refresh);\n        }\n      },\n\n      /** Move to the next page. */\n      nextPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page + 1, refresh);\n        }\n      },\n\n      /** Move to the previous page. */\n      previousPage(refresh: boolean = true) {\n        if (this.hasPaging()) {\n          let paging = this.paging;\n\n          this.setPage(paging.page - 1, refresh);\n        }\n      },\n\n      /** Refreshes the list data using the function provided by the describer. */\n      async refresh(): Promise {\n        let data = await refresh(this);\n\n        this.refreshes.emit(data);\n\n        return data;\n      }\n    };\n\n    return state;\n  }\n\n  /**\n   * Refreshes the list data using a list state.\n   *\n   * @param state The list state.\n   * @returns A promise that resolves with the new list data.\n   */\n  async abstract refresh(state: ListState): Promise;\n}\n\n/** The options for the default implementation of a list describer. */\nexport interface DefaultListOptions {\n  /** The refresh function to provide to the list state. */\n  refresh(state: ListState): Promise;\n}\n\n/** A list describer for a model which uses default behaviour. */\nexport class DefaultListDescriber extends ListDescriber {\n  /** The options for the default describer. */\n  options: DefaultListOptions;\n\n  /**\n   * Constructs the default list describer.\n   *\n   * @param model The model to generate state for.\n   * @param options The default list options used to drive the default describer implementation.\n   */\n  constructor(model: ModelConstructor, options: DefaultListOptions) {\n    super(model);\n\n    this.options = options;\n  }\n\n  /** Refreshes the list data using the refresh function provided as an option. */\n  async refresh(state: ListState): Promise {\n    return this.options.refresh(state);\n  }\n}\n\n/**\n * Generates default list describers from ModelSafe models.\n * The list describer can then be used to initialize a state for a screen\n * that behaves in a default way.\n */\n@Injectable()\nexport class AutoListDescriber {\n  /** Automatically generates a list describer for a model. */\n  describe(model: ModelConstructor, options: DefaultListOptions): DefaultListDescriber {\n    return new DefaultListDescriber(model, options);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/miscellaneous.html":{"url":"/miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             ASC\n                        \n                    \n                    \n                        \n                            ASC:     \n    \n                        \n                    \n                    \n                        \n                            An ascending sort. \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             DESC\n                        \n                    \n                    \n                        \n                            DESC:     \n    \n                        \n                    \n                    \n                        \n                            A descending sort. \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             MODEL_PROP_OPTIONS_META_KEY\n                        \n                    \n                    \n                        \n                            MODEL_PROP_OPTIONS_META_KEY:     \n    \n                        \n                    \n                        \n                            \n                                Default value: cruddle:propOptions\n                            \n                        \n                    \n                        \n                            The meta key for a model's property options. \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             CruddleModuleNgFactory\n                        \n                    \n                    \n                        \n                            CruddleModuleNgFactory:     any\n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/coverage.html":{"url":"/coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    90%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/base.ts\n            \n            \n                classe\n            \n            \n                ScreenDescriber\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/delete.ts\n            \n            \n                classe\n            \n            \n                DefaultDeleteDescriber\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/delete.ts\n            \n            \n                classe\n            \n            \n                DeleteDescriber\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/delete.ts\n            \n            \n                injectable\n            \n            \n                AutoDeleteDescriber\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/delete.ts\n            \n            \n                interface\n            \n            \n                DefaultDeleteOptions\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/delete.ts\n            \n            \n                interface\n            \n            \n                DeleteState\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/form.ts\n            \n            \n                classe\n            \n            \n                DefaultFormDescriber\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/form.ts\n            \n            \n                classe\n            \n            \n                FormDescriber\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/form.ts\n            \n            \n                injectable\n            \n            \n                AutoFormDescriber\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/form.ts\n            \n            \n                interface\n            \n            \n                DefaultFormOptions\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/form.ts\n            \n            \n                interface\n            \n            \n                FormState\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                classe\n            \n            \n                DefaultListDescriber\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                classe\n            \n            \n                ListDescriber\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                injectable\n            \n            \n                AutoListDescriber\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                interface\n            \n            \n                DefaultListOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                interface\n            \n            \n                FilterState\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                interface\n            \n            \n                ListMode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                interface\n            \n            \n                ListState\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                interface\n            \n            \n                PagingState\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/list.ts\n            \n            \n                interface\n            \n            \n                SortState\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/module.ngfactory.ts\n            \n            \n                classe\n            \n            \n                CruddleModuleInjector\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                src/read.ts\n            \n            \n                classe\n            \n            \n                DefaultReadDescriber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/read.ts\n            \n            \n                classe\n            \n            \n                ReadDescriber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/read.ts\n            \n            \n                injectable\n            \n            \n                AutoReadDescriber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/read.ts\n            \n            \n                interface\n            \n            \n                ReadState\n            \n            \n                0 %\n                (0/0)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
